// Code generated by protoc-gen-go. DO NOT EDIT.
// source: policy.proto

package gin_jwt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Policy struct {
	Rules                []string `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_155aaf9c84bcc13e, []int{0}
}
func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (dst *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(dst, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetRules() []string {
	if m != nil {
		return m.Rules
	}
	return nil
}

type AddPolicyReq struct {
	Sec                  string   `protobuf:"bytes,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Ptype                string   `protobuf:"bytes,2,opt,name=ptype,proto3" json:"ptype,omitempty"`
	Rule                 []string `protobuf:"bytes,3,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPolicyReq) Reset()         { *m = AddPolicyReq{} }
func (m *AddPolicyReq) String() string { return proto.CompactTextString(m) }
func (*AddPolicyReq) ProtoMessage()    {}
func (*AddPolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_155aaf9c84bcc13e, []int{1}
}
func (m *AddPolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPolicyReq.Unmarshal(m, b)
}
func (m *AddPolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPolicyReq.Marshal(b, m, deterministic)
}
func (dst *AddPolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPolicyReq.Merge(dst, src)
}
func (m *AddPolicyReq) XXX_Size() int {
	return xxx_messageInfo_AddPolicyReq.Size(m)
}
func (m *AddPolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPolicyReq proto.InternalMessageInfo

func (m *AddPolicyReq) GetSec() string {
	if m != nil {
		return m.Sec
	}
	return ""
}

func (m *AddPolicyReq) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *AddPolicyReq) GetRule() []string {
	if m != nil {
		return m.Rule
	}
	return nil
}

type RemovePolicyReq struct {
	Sec                  string   `protobuf:"bytes,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Ptype                string   `protobuf:"bytes,2,opt,name=ptype,proto3" json:"ptype,omitempty"`
	Rule                 []string `protobuf:"bytes,3,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePolicyReq) Reset()         { *m = RemovePolicyReq{} }
func (m *RemovePolicyReq) String() string { return proto.CompactTextString(m) }
func (*RemovePolicyReq) ProtoMessage()    {}
func (*RemovePolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_155aaf9c84bcc13e, []int{2}
}
func (m *RemovePolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePolicyReq.Unmarshal(m, b)
}
func (m *RemovePolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePolicyReq.Marshal(b, m, deterministic)
}
func (dst *RemovePolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePolicyReq.Merge(dst, src)
}
func (m *RemovePolicyReq) XXX_Size() int {
	return xxx_messageInfo_RemovePolicyReq.Size(m)
}
func (m *RemovePolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePolicyReq proto.InternalMessageInfo

func (m *RemovePolicyReq) GetSec() string {
	if m != nil {
		return m.Sec
	}
	return ""
}

func (m *RemovePolicyReq) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *RemovePolicyReq) GetRule() []string {
	if m != nil {
		return m.Rule
	}
	return nil
}

type RemoveFilteredPolicyReq struct {
	Sec                  string   `protobuf:"bytes,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Ptype                string   `protobuf:"bytes,2,opt,name=ptype,proto3" json:"ptype,omitempty"`
	FieldIndex           string   `protobuf:"bytes,3,opt,name=fieldIndex,proto3" json:"fieldIndex,omitempty"`
	FieldValues          []string `protobuf:"bytes,4,rep,name=fieldValues,proto3" json:"fieldValues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFilteredPolicyReq) Reset()         { *m = RemoveFilteredPolicyReq{} }
func (m *RemoveFilteredPolicyReq) String() string { return proto.CompactTextString(m) }
func (*RemoveFilteredPolicyReq) ProtoMessage()    {}
func (*RemoveFilteredPolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_155aaf9c84bcc13e, []int{3}
}
func (m *RemoveFilteredPolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFilteredPolicyReq.Unmarshal(m, b)
}
func (m *RemoveFilteredPolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFilteredPolicyReq.Marshal(b, m, deterministic)
}
func (dst *RemoveFilteredPolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFilteredPolicyReq.Merge(dst, src)
}
func (m *RemoveFilteredPolicyReq) XXX_Size() int {
	return xxx_messageInfo_RemoveFilteredPolicyReq.Size(m)
}
func (m *RemoveFilteredPolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFilteredPolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFilteredPolicyReq proto.InternalMessageInfo

func (m *RemoveFilteredPolicyReq) GetSec() string {
	if m != nil {
		return m.Sec
	}
	return ""
}

func (m *RemoveFilteredPolicyReq) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *RemoveFilteredPolicyReq) GetFieldIndex() string {
	if m != nil {
		return m.FieldIndex
	}
	return ""
}

func (m *RemoveFilteredPolicyReq) GetFieldValues() []string {
	if m != nil {
		return m.FieldValues
	}
	return nil
}

func init() {
	proto.RegisterType((*Policy)(nil), "gin_jwt.Policy")
	proto.RegisterType((*AddPolicyReq)(nil), "gin_jwt.AddPolicyReq")
	proto.RegisterType((*RemovePolicyReq)(nil), "gin_jwt.RemovePolicyReq")
	proto.RegisterType((*RemoveFilteredPolicyReq)(nil), "gin_jwt.RemoveFilteredPolicyReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PolicyAdapterClient is the client API for PolicyAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolicyAdapterClient interface {
	LoadPolicy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Policy, error)
	SavePolicy(ctx context.Context, in *Policy, opts ...grpc.CallOption) (*empty.Empty, error)
	AddPolicy(ctx context.Context, in *AddPolicyReq, opts ...grpc.CallOption) (*empty.Empty, error)
	RemovePolicy(ctx context.Context, in *RemovePolicyReq, opts ...grpc.CallOption) (*empty.Empty, error)
	RemoveFilteredPolicy(ctx context.Context, in *RemoveFilteredPolicyReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type policyAdapterClient struct {
	cc *grpc.ClientConn
}

func NewPolicyAdapterClient(cc *grpc.ClientConn) PolicyAdapterClient {
	return &policyAdapterClient{cc}
}

func (c *policyAdapterClient) LoadPolicy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/gin_jwt.PolicyAdapter/loadPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyAdapterClient) SavePolicy(ctx context.Context, in *Policy, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gin_jwt.PolicyAdapter/savePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyAdapterClient) AddPolicy(ctx context.Context, in *AddPolicyReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gin_jwt.PolicyAdapter/addPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyAdapterClient) RemovePolicy(ctx context.Context, in *RemovePolicyReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gin_jwt.PolicyAdapter/removePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyAdapterClient) RemoveFilteredPolicy(ctx context.Context, in *RemoveFilteredPolicyReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gin_jwt.PolicyAdapter/removeFilteredPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PolicyAdapterServer is the server API for PolicyAdapter service.
type PolicyAdapterServer interface {
	LoadPolicy(context.Context, *empty.Empty) (*Policy, error)
	SavePolicy(context.Context, *Policy) (*empty.Empty, error)
	AddPolicy(context.Context, *AddPolicyReq) (*empty.Empty, error)
	RemovePolicy(context.Context, *RemovePolicyReq) (*empty.Empty, error)
	RemoveFilteredPolicy(context.Context, *RemoveFilteredPolicyReq) (*empty.Empty, error)
}

func RegisterPolicyAdapterServer(s *grpc.Server, srv PolicyAdapterServer) {
	s.RegisterService(&_PolicyAdapter_serviceDesc, srv)
}

func _PolicyAdapter_LoadPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAdapterServer).LoadPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gin_jwt.PolicyAdapter/LoadPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAdapterServer).LoadPolicy(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyAdapter_SavePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Policy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAdapterServer).SavePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gin_jwt.PolicyAdapter/SavePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAdapterServer).SavePolicy(ctx, req.(*Policy))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyAdapter_AddPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAdapterServer).AddPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gin_jwt.PolicyAdapter/AddPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAdapterServer).AddPolicy(ctx, req.(*AddPolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyAdapter_RemovePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAdapterServer).RemovePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gin_jwt.PolicyAdapter/RemovePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAdapterServer).RemovePolicy(ctx, req.(*RemovePolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyAdapter_RemoveFilteredPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFilteredPolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAdapterServer).RemoveFilteredPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gin_jwt.PolicyAdapter/RemoveFilteredPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAdapterServer).RemoveFilteredPolicy(ctx, req.(*RemoveFilteredPolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PolicyAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gin_jwt.PolicyAdapter",
	HandlerType: (*PolicyAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "loadPolicy",
			Handler:    _PolicyAdapter_LoadPolicy_Handler,
		},
		{
			MethodName: "savePolicy",
			Handler:    _PolicyAdapter_SavePolicy_Handler,
		},
		{
			MethodName: "addPolicy",
			Handler:    _PolicyAdapter_AddPolicy_Handler,
		},
		{
			MethodName: "removePolicy",
			Handler:    _PolicyAdapter_RemovePolicy_Handler,
		},
		{
			MethodName: "removeFilteredPolicy",
			Handler:    _PolicyAdapter_RemoveFilteredPolicy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "policy.proto",
}

func init() { proto.RegisterFile("policy.proto", fileDescriptor_policy_155aaf9c84bcc13e) }

var fileDescriptor_policy_155aaf9c84bcc13e = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x9b, 0xa6, 0x5f, 0x3f, 0x32, 0x56, 0x2a, 0x43, 0xd5, 0xa5, 0x87, 0x12, 0x72, 0xea,
	0x69, 0x03, 0xf6, 0xe0, 0xc5, 0x4b, 0x0b, 0x0a, 0x0a, 0x82, 0xe4, 0xe0, 0xc1, 0x8b, 0xa4, 0xcd,
	0x34, 0x46, 0xb6, 0xdd, 0x98, 0x6c, 0xd4, 0x9e, 0xfd, 0x91, 0xfe, 0x1d, 0xc9, 0x6e, 0x53, 0x42,
	0xb5, 0x3d, 0x88, 0x97, 0xb0, 0x33, 0x3b, 0xef, 0xb3, 0xcb, 0x3e, 0x81, 0x4e, 0x2a, 0x45, 0x32,
	0x5b, 0xf1, 0x34, 0x93, 0x4a, 0xe2, 0xff, 0x38, 0x59, 0x3e, 0x3e, 0xbf, 0xa9, 0xfe, 0x28, 0x4e,
	0xd4, 0x53, 0x31, 0xe5, 0x33, 0xb9, 0xf0, 0x63, 0x29, 0xc2, 0x65, 0xec, 0xeb, 0x89, 0x69, 0x31,
	0xf7, 0x53, 0xb5, 0x4a, 0x29, 0xf7, 0x69, 0x91, 0xaa, 0x95, 0xf9, 0x9a, 0xb4, 0x37, 0x80, 0xf6,
	0x9d, 0xa6, 0x61, 0x0f, 0xfe, 0x65, 0x85, 0xa0, 0x9c, 0x59, 0xae, 0x3d, 0x74, 0x02, 0x53, 0x78,
	0x37, 0xd0, 0x19, 0x47, 0x91, 0x19, 0x09, 0xe8, 0x05, 0x8f, 0xc0, 0xce, 0x69, 0xc6, 0x2c, 0xd7,
	0x1a, 0x3a, 0x41, 0xb9, 0x2c, 0x73, 0x9a, 0xce, 0x9a, 0xba, 0x67, 0x0a, 0x44, 0x68, 0x95, 0x00,
	0x66, 0x6b, 0x98, 0x5e, 0x7b, 0xb7, 0xd0, 0x0d, 0x68, 0x21, 0x5f, 0xe9, 0x6f, 0x70, 0x1f, 0x16,
	0x9c, 0x1a, 0xde, 0x55, 0x22, 0x14, 0x65, 0xf4, 0x8b, 0x6b, 0x0e, 0x00, 0xe6, 0x09, 0x89, 0xe8,
	0x7a, 0x19, 0xd1, 0x3b, 0xb3, 0xf5, 0x56, 0xad, 0x83, 0x2e, 0x1c, 0xe8, 0xea, 0x3e, 0x14, 0x05,
	0xe5, 0xac, 0xa5, 0x8f, 0xaf, 0xb7, 0xce, 0x3e, 0x9b, 0x70, 0x68, 0xce, 0x1d, 0x47, 0x61, 0xaa,
	0x28, 0xc3, 0x73, 0x00, 0x21, 0xc3, 0xf5, 0x65, 0xf0, 0x84, 0xc7, 0x52, 0xc6, 0x82, 0x78, 0xe5,
	0x82, 0x5f, 0x96, 0xcf, 0xdf, 0xef, 0xf2, 0xb5, 0x37, 0x6e, 0x06, 0xbd, 0x46, 0x19, 0xcc, 0xc3,
	0xea, 0x75, 0x70, 0x7b, 0xa0, 0xbf, 0x83, 0xe4, 0x35, 0xf0, 0x02, 0x9c, 0xb0, 0x92, 0x84, 0xc7,
	0x9b, 0x5c, 0x5d, 0xdc, 0x9e, 0xf4, 0x04, 0x3a, 0x59, 0x4d, 0x0b, 0xb2, 0x0d, 0x60, 0xcb, 0xd6,
	0x1e, 0x46, 0x00, 0xbd, 0xec, 0x07, 0x15, 0xe8, 0x6e, 0xb1, 0xbe, 0x99, 0xda, 0xcd, 0x9c, 0x38,
	0x0f, 0xd5, 0xaf, 0x3d, 0x6d, 0xeb, 0xcd, 0xd1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x13,
	0x8f, 0x0d, 0xfa, 0x02, 0x00, 0x00,
}
