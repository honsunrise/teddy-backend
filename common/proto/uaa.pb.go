// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/zhsyourai/teddy-backend/common/proto/uaa.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username             string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             []byte               `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	AccountExpired       bool                 `protobuf:"varint,5,opt,name=accountExpired,proto3" json:"accountExpired,omitempty"`
	AccountLocked        bool                 `protobuf:"varint,6,opt,name=accountLocked,proto3" json:"accountLocked,omitempty"`
	CredentialsExpired   bool                 `protobuf:"varint,7,opt,name=credentialsExpired,proto3" json:"credentialsExpired,omitempty"`
	Roles                []string             `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"`
	OauthUserIds         map[string]string    `protobuf:"bytes,9,rep,name=oauthUserIds,proto3" json:"oauthUserIds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateDate           *timestamp.Timestamp `protobuf:"bytes,10,opt,name=createDate,proto3" json:"createDate,omitempty"`
	UpdateDate           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Account) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *Account) GetAccountExpired() bool {
	if m != nil {
		return m.AccountExpired
	}
	return false
}

func (m *Account) GetAccountLocked() bool {
	if m != nil {
		return m.AccountLocked
	}
	return false
}

func (m *Account) GetCredentialsExpired() bool {
	if m != nil {
		return m.CredentialsExpired
	}
	return false
}

func (m *Account) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Account) GetOauthUserIds() map[string]string {
	if m != nil {
		return m.OauthUserIds
	}
	return nil
}

func (m *Account) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *Account) GetUpdateDate() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateDate
	}
	return nil
}

type GetAllResp struct {
	Accounts             []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetAllResp) Reset()         { *m = GetAllResp{} }
func (m *GetAllResp) String() string { return proto.CompactTextString(m) }
func (*GetAllResp) ProtoMessage()    {}
func (*GetAllResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{1}
}
func (m *GetAllResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllResp.Unmarshal(m, b)
}
func (m *GetAllResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllResp.Marshal(b, m, deterministic)
}
func (dst *GetAllResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllResp.Merge(dst, src)
}
func (m *GetAllResp) XXX_Size() int {
	return xxx_messageInfo_GetAllResp.Size(m)
}
func (m *GetAllResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllResp proto.InternalMessageInfo

func (m *GetAllResp) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type GetByUsernameReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByUsernameReq) Reset()         { *m = GetByUsernameReq{} }
func (m *GetByUsernameReq) String() string { return proto.CompactTextString(m) }
func (*GetByUsernameReq) ProtoMessage()    {}
func (*GetByUsernameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{2}
}
func (m *GetByUsernameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByUsernameReq.Unmarshal(m, b)
}
func (m *GetByUsernameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByUsernameReq.Marshal(b, m, deterministic)
}
func (dst *GetByUsernameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByUsernameReq.Merge(dst, src)
}
func (m *GetByUsernameReq) XXX_Size() int {
	return xxx_messageInfo_GetByUsernameReq.Size(m)
}
func (m *GetByUsernameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByUsernameReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetByUsernameReq proto.InternalMessageInfo

func (m *GetByUsernameReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type DeleteByUsernameReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteByUsernameReq) Reset()         { *m = DeleteByUsernameReq{} }
func (m *DeleteByUsernameReq) String() string { return proto.CompactTextString(m) }
func (*DeleteByUsernameReq) ProtoMessage()    {}
func (*DeleteByUsernameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{3}
}
func (m *DeleteByUsernameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteByUsernameReq.Unmarshal(m, b)
}
func (m *DeleteByUsernameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteByUsernameReq.Marshal(b, m, deterministic)
}
func (dst *DeleteByUsernameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteByUsernameReq.Merge(dst, src)
}
func (m *DeleteByUsernameReq) XXX_Size() int {
	return xxx_messageInfo_DeleteByUsernameReq.Size(m)
}
func (m *DeleteByUsernameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteByUsernameReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteByUsernameReq proto.InternalMessageInfo

func (m *DeleteByUsernameReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type RegisterReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Roles                []string `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReq) Reset()         { *m = RegisterReq{} }
func (m *RegisterReq) String() string { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()    {}
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{4}
}
func (m *RegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReq.Unmarshal(m, b)
}
func (m *RegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReq.Marshal(b, m, deterministic)
}
func (dst *RegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReq.Merge(dst, src)
}
func (m *RegisterReq) XXX_Size() int {
	return xxx_messageInfo_RegisterReq.Size(m)
}
func (m *RegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReq proto.InternalMessageInfo

func (m *RegisterReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterReq) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RegisterReq) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type VerifyPasswordReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyPasswordReq) Reset()         { *m = VerifyPasswordReq{} }
func (m *VerifyPasswordReq) String() string { return proto.CompactTextString(m) }
func (*VerifyPasswordReq) ProtoMessage()    {}
func (*VerifyPasswordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{5}
}
func (m *VerifyPasswordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyPasswordReq.Unmarshal(m, b)
}
func (m *VerifyPasswordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyPasswordReq.Marshal(b, m, deterministic)
}
func (dst *VerifyPasswordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyPasswordReq.Merge(dst, src)
}
func (m *VerifyPasswordReq) XXX_Size() int {
	return xxx_messageInfo_VerifyPasswordReq.Size(m)
}
func (m *VerifyPasswordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyPasswordReq.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyPasswordReq proto.InternalMessageInfo

func (m *VerifyPasswordReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *VerifyPasswordReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ChangePasswordReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	OldPassword          string   `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordReq) Reset()         { *m = ChangePasswordReq{} }
func (m *ChangePasswordReq) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordReq) ProtoMessage()    {}
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_uaa_a36ca609de9329dd, []int{6}
}
func (m *ChangePasswordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordReq.Unmarshal(m, b)
}
func (m *ChangePasswordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordReq.Marshal(b, m, deterministic)
}
func (dst *ChangePasswordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordReq.Merge(dst, src)
}
func (m *ChangePasswordReq) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordReq.Size(m)
}
func (m *ChangePasswordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordReq proto.InternalMessageInfo

func (m *ChangePasswordReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePasswordReq) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordReq) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "com.teddy.srv.uaa.Account")
	proto.RegisterMapType((map[string]string)(nil), "com.teddy.srv.uaa.Account.OauthUserIdsEntry")
	proto.RegisterType((*GetAllResp)(nil), "com.teddy.srv.uaa.GetAllResp")
	proto.RegisterType((*GetByUsernameReq)(nil), "com.teddy.srv.uaa.GetByUsernameReq")
	proto.RegisterType((*DeleteByUsernameReq)(nil), "com.teddy.srv.uaa.DeleteByUsernameReq")
	proto.RegisterType((*RegisterReq)(nil), "com.teddy.srv.uaa.RegisterReq")
	proto.RegisterType((*VerifyPasswordReq)(nil), "com.teddy.srv.uaa.VerifyPasswordReq")
	proto.RegisterType((*ChangePasswordReq)(nil), "com.teddy.srv.uaa.ChangePasswordReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UAAClient is the client API for UAA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UAAClient interface {
	GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllResp, error)
	GetByUsername(ctx context.Context, in *GetByUsernameReq, opts ...grpc.CallOption) (*Account, error)
	DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, opts ...grpc.CallOption) (*empty.Empty, error)
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*Account, error)
	VerifyPassword(ctx context.Context, in *VerifyPasswordReq, opts ...grpc.CallOption) (*Account, error)
	ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type uAAClient struct {
	cc *grpc.ClientConn
}

func NewUAAClient(cc *grpc.ClientConn) UAAClient {
	return &uAAClient{cc}
}

func (c *uAAClient) GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllResp, error) {
	out := new(GetAllResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAClient) GetByUsername(ctx context.Context, in *GetByUsernameReq, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/GetByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAClient) DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/DeleteByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAClient) VerifyPassword(ctx context.Context, in *VerifyPasswordReq, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/VerifyPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAClient) ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.uaa.UAA/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UAAServer is the server API for UAA service.
type UAAServer interface {
	GetAll(context.Context, *empty.Empty) (*GetAllResp, error)
	GetByUsername(context.Context, *GetByUsernameReq) (*Account, error)
	DeleteByUsername(context.Context, *DeleteByUsernameReq) (*empty.Empty, error)
	Register(context.Context, *RegisterReq) (*Account, error)
	VerifyPassword(context.Context, *VerifyPasswordReq) (*Account, error)
	ChangePassword(context.Context, *ChangePasswordReq) (*empty.Empty, error)
}

func RegisterUAAServer(s *grpc.Server, srv UAAServer) {
	s.RegisterService(&_UAA_serviceDesc, srv)
}

func _UAA_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).GetAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UAA_GetByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByUsernameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).GetByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/GetByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).GetByUsername(ctx, req.(*GetByUsernameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UAA_DeleteByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByUsernameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).DeleteByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/DeleteByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).DeleteByUsername(ctx, req.(*DeleteByUsernameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UAA_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UAA_VerifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).VerifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/VerifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).VerifyPassword(ctx, req.(*VerifyPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UAA_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UAAServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.uaa.UAA/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UAAServer).ChangePassword(ctx, req.(*ChangePasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UAA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.teddy.srv.uaa.UAA",
	HandlerType: (*UAAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _UAA_GetAll_Handler,
		},
		{
			MethodName: "GetByUsername",
			Handler:    _UAA_GetByUsername_Handler,
		},
		{
			MethodName: "DeleteByUsername",
			Handler:    _UAA_DeleteByUsername_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _UAA_Register_Handler,
		},
		{
			MethodName: "VerifyPassword",
			Handler:    _UAA_VerifyPassword_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UAA_ChangePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/zhsyourai/teddy-backend/common/proto/uaa.proto",
}

func init() {
	proto.RegisterFile("github.com/zhsyourai/teddy-backend/common/proto/uaa.proto", fileDescriptor_uaa_a36ca609de9329dd)
}

var fileDescriptor_uaa_a36ca609de9329dd = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x51, 0x4f, 0xd3, 0x50,
	0x14, 0xc7, 0x29, 0x63, 0x30, 0xce, 0x80, 0xb0, 0x2b, 0x31, 0x4d, 0x13, 0xcd, 0x52, 0x09, 0xd9,
	0x83, 0xde, 0x46, 0x48, 0x8c, 0xe2, 0x83, 0x19, 0x42, 0xd0, 0x68, 0xe2, 0xd2, 0x80, 0x0f, 0xbe,
	0x5d, 0xda, 0x43, 0xd7, 0xac, 0xed, 0xad, 0xf7, 0xde, 0x82, 0xf5, 0x0b, 0xe8, 0x07, 0xf5, 0x83,
	0x98, 0xb6, 0xeb, 0xd6, 0xb2, 0xe2, 0x48, 0x7c, 0xd9, 0x7a, 0x4e, 0xff, 0xe7, 0xbf, 0x7b, 0xcf,
	0xff, 0x97, 0xc1, 0x1b, 0xcf, 0x57, 0xe3, 0xe4, 0x8a, 0x3a, 0x3c, 0xb4, 0x7e, 0x8e, 0x65, 0xca,
	0x13, 0xc1, 0x7c, 0x4b, 0xa1, 0xeb, 0xa6, 0x2f, 0xae, 0x98, 0x33, 0xc1, 0xc8, 0xb5, 0x1c, 0x1e,
	0x86, 0x3c, 0xb2, 0x62, 0xc1, 0x15, 0xb7, 0x12, 0xc6, 0x68, 0xfe, 0x44, 0x7a, 0x0e, 0x0f, 0x69,
	0xae, 0xa4, 0x52, 0xdc, 0xd0, 0x84, 0x31, 0xe3, 0xa8, 0xe2, 0xe6, 0xf1, 0x80, 0x45, 0x5e, 0x31,
	0x75, 0x95, 0x5c, 0x5b, 0xb1, 0x4a, 0x63, 0x94, 0x16, 0x86, 0xb1, 0x4a, 0x8b, 0xcf, 0xc2, 0xc7,
	0x78, 0xbb, 0x7c, 0x48, 0xf9, 0x21, 0x4a, 0xc5, 0xc2, 0x78, 0xfe, 0x54, 0x0c, 0x9b, 0xbf, 0xd7,
	0x60, 0x63, 0xe8, 0x38, 0x3c, 0x89, 0x14, 0xd9, 0x85, 0x56, 0xe2, 0xbb, 0xba, 0xd6, 0xd7, 0x06,
	0x9b, 0x76, 0xf6, 0x48, 0x0c, 0xe8, 0x24, 0x12, 0x45, 0xc4, 0x42, 0xd4, 0x57, 0xf3, 0xf6, 0xac,
	0x26, 0x7b, 0xd0, 0xc6, 0x90, 0xf9, 0x81, 0xde, 0xca, 0x5f, 0x14, 0x45, 0x36, 0x11, 0x33, 0x29,
	0x6f, 0xb9, 0x70, 0xf5, 0xb5, 0xbe, 0x36, 0xd8, 0xb2, 0x67, 0x35, 0x39, 0x80, 0x1d, 0x56, 0xfc,
	0xd4, 0xd9, 0x8f, 0xd8, 0x17, 0xe8, 0xea, 0xed, 0xbe, 0x36, 0xe8, 0xd8, 0x77, 0xba, 0x64, 0x1f,
	0xb6, 0xa7, 0x9d, 0xcf, 0xdc, 0x99, 0xa0, 0xab, 0xaf, 0xe7, 0xb2, 0x7a, 0x93, 0x50, 0x20, 0x8e,
	0x40, 0x17, 0x23, 0xe5, 0xb3, 0x40, 0x96, 0x8e, 0x1b, 0xb9, 0xb4, 0xe1, 0x4d, 0x76, 0x5e, 0xc1,
	0x03, 0x94, 0x7a, 0xa7, 0xdf, 0xca, 0xce, 0x9b, 0x17, 0x64, 0x04, 0x5b, 0x9c, 0x25, 0x6a, 0x7c,
	0x29, 0x51, 0x7c, 0x74, 0xa5, 0xbe, 0xd9, 0x6f, 0x0d, 0xba, 0x87, 0xcf, 0xe9, 0x42, 0x36, 0x74,
	0xba, 0x25, 0xfa, 0xa5, 0x22, 0x3f, 0x8b, 0x94, 0x48, 0xed, 0x9a, 0x03, 0x39, 0x06, 0x70, 0x04,
	0x32, 0x85, 0xa7, 0x4c, 0xa1, 0x0e, 0x7d, 0x6d, 0xd0, 0x3d, 0x34, 0xa8, 0xc7, 0xb9, 0x17, 0x20,
	0x2d, 0x83, 0xa1, 0x17, 0x65, 0x0e, 0x76, 0x45, 0x9d, 0xcd, 0x26, 0xb1, 0x5b, 0xce, 0x76, 0x97,
	0xcf, 0xce, 0xd5, 0xc6, 0x3b, 0xe8, 0x2d, 0x1c, 0x2d, 0x8b, 0x74, 0x82, 0x69, 0x19, 0xe9, 0x04,
	0xd3, 0x6c, 0x0d, 0x37, 0x2c, 0x48, 0xca, 0x3c, 0x8b, 0xe2, 0x78, 0xf5, 0xb5, 0x66, 0x9e, 0x02,
	0x9c, 0xa3, 0x1a, 0x06, 0x81, 0x8d, 0x32, 0x26, 0xaf, 0xa0, 0x33, 0xdd, 0xb7, 0xd4, 0xb5, 0x7c,
	0x29, 0xc6, 0xfd, 0x4b, 0xb1, 0x67, 0x5a, 0x93, 0xc2, 0xee, 0x39, 0xaa, 0x93, 0xf4, 0x72, 0xca,
	0x89, 0x8d, 0xdf, 0x6b, 0x18, 0x69, 0x75, 0x8c, 0xcc, 0x97, 0xf0, 0xe8, 0x14, 0x03, 0x54, 0xf8,
	0xf0, 0x91, 0x5f, 0x1a, 0x74, 0x6d, 0xf4, 0x7c, 0xa9, 0x50, 0x2c, 0xd1, 0xd6, 0x78, 0x9c, 0x12,
	0x3c, 0xe3, 0xb1, 0x99, 0xe0, 0x3d, 0x68, 0xc7, 0x63, 0x1e, 0x61, 0x8e, 0xef, 0xa6, 0x5d, 0x14,
	0x73, 0x7a, 0xda, 0x15, 0x7a, 0xcc, 0x4f, 0xd0, 0xfb, 0x8a, 0xc2, 0xbf, 0x4e, 0x47, 0x53, 0xcf,
	0xff, 0x38, 0x8e, 0x29, 0xa1, 0xf7, 0x7e, 0xcc, 0x22, 0x0f, 0x1f, 0x6a, 0xd6, 0x87, 0x2e, 0x0f,
	0xdc, 0x51, 0xdd, 0xaf, 0xda, 0xca, 0x14, 0x11, 0xde, 0xce, 0x14, 0xc5, 0x3d, 0xab, 0xad, 0xc3,
	0x3f, 0x2d, 0x68, 0x5d, 0x0e, 0x87, 0x64, 0x08, 0xeb, 0x45, 0xf8, 0xe4, 0xf1, 0x02, 0x6f, 0x67,
	0xd9, 0x9f, 0x8d, 0xf1, 0xa4, 0x21, 0xfe, 0x39, 0x2f, 0xe6, 0x0a, 0xb1, 0x61, 0xbb, 0x96, 0x3c,
	0x79, 0xd6, 0x3c, 0x51, 0x0b, 0xda, 0xf8, 0x07, 0x55, 0xe6, 0x0a, 0xb9, 0x80, 0xdd, 0xbb, 0x74,
	0x90, 0x83, 0x86, 0x89, 0x06, 0x84, 0x8c, 0x7b, 0x2e, 0x62, 0xae, 0x90, 0x0f, 0xd0, 0x29, 0xf9,
	0x21, 0x4f, 0x1b, 0xdc, 0x2a, 0x70, 0x2d, 0x3d, 0xdf, 0x4e, 0x1d, 0x00, 0xb2, 0xdf, 0xa0, 0x5f,
	0x60, 0x64, 0x89, 0xeb, 0x08, 0x76, 0xea, 0x24, 0x34, 0xba, 0x2e, 0xc0, 0x72, 0xff, 0x8d, 0x4f,
	0x36, 0xbe, 0xb5, 0x8b, 0xde, 0x7a, 0xfe, 0x75, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0x62, 0x5a,
	0xc7, 0x70, 0xb8, 0x06, 0x00, 0x00,
}
