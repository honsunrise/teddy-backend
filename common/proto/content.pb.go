// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/zhsyourai/teddy-backend/common/proto/content.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sort struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Asc                  bool     `protobuf:"varint,2,opt,name=asc,proto3" json:"asc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sort) Reset()         { *m = Sort{} }
func (m *Sort) String() string { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()    {}
func (*Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{0}
}
func (m *Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort.Unmarshal(m, b)
}
func (m *Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort.Marshal(b, m, deterministic)
}
func (dst *Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort.Merge(dst, src)
}
func (m *Sort) XXX_Size() int {
	return xxx_messageInfo_Sort.Size(m)
}
func (m *Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_Sort proto.InternalMessageInfo

func (m *Sort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sort) GetAsc() bool {
	if m != nil {
		return m.Asc
	}
	return false
}

type Tag struct {
	Tag                  string               `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Usage                uint64               `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	LastUseTime          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=lastUseTime,proto3" json:"lastUseTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{1}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Tag) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *Tag) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetLastUseTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastUseTime
	}
	return nil
}

type Info struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	InfoID               string               `protobuf:"bytes,2,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string               `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	ContentTime          *timestamp.Timestamp `protobuf:"bytes,6,opt,name=contentTime,proto3" json:"contentTime,omitempty"`
	CoverResources       map[string]string    `protobuf:"bytes,7,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PublishTime          *timestamp.Timestamp `protobuf:"bytes,8,opt,name=publishTime,proto3" json:"publishTime,omitempty"`
	LastReviewTime       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=lastReviewTime,proto3" json:"lastReviewTime,omitempty"`
	Valid                bool                 `protobuf:"varint,10,opt,name=valid,proto3" json:"valid,omitempty"`
	WatchCount           int64                `protobuf:"varint,11,opt,name=watchCount,proto3" json:"watchCount,omitempty"`
	Tags                 []string             `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	ThumbUp              int64                `protobuf:"varint,13,opt,name=thumbUp,proto3" json:"thumbUp,omitempty"`
	IsThumbUp            bool                 `protobuf:"varint,14,opt,name=isThumbUp,proto3" json:"isThumbUp,omitempty"`
	ThumbUpList          []string             `protobuf:"bytes,15,rep,name=thumbUpList,proto3" json:"thumbUpList,omitempty"`
	ThumbDown            int64                `protobuf:"varint,16,opt,name=thumbDown,proto3" json:"thumbDown,omitempty"`
	IsThumbDown          bool                 `protobuf:"varint,17,opt,name=isThumbDown,proto3" json:"isThumbDown,omitempty"`
	ThumbDownList        []string             `protobuf:"bytes,18,rep,name=thumbDownList,proto3" json:"thumbDownList,omitempty"`
	Favorites            int64                `protobuf:"varint,19,opt,name=favorites,proto3" json:"favorites,omitempty"`
	IsFavorite           bool                 `protobuf:"varint,20,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	FavoriteList         []string             `protobuf:"bytes,21,rep,name=favoriteList,proto3" json:"favoriteList,omitempty"`
	LastModifyTime       *timestamp.Timestamp `protobuf:"bytes,22,opt,name=lastModifyTime,proto3" json:"lastModifyTime,omitempty"`
	CanReview            bool                 `protobuf:"varint,23,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{2}
}
func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (dst *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(dst, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Info) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Info) GetContentTime() *timestamp.Timestamp {
	if m != nil {
		return m.ContentTime
	}
	return nil
}

func (m *Info) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *Info) GetPublishTime() *timestamp.Timestamp {
	if m != nil {
		return m.PublishTime
	}
	return nil
}

func (m *Info) GetLastReviewTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastReviewTime
	}
	return nil
}

func (m *Info) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Info) GetWatchCount() int64 {
	if m != nil {
		return m.WatchCount
	}
	return 0
}

func (m *Info) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Info) GetThumbUp() int64 {
	if m != nil {
		return m.ThumbUp
	}
	return 0
}

func (m *Info) GetIsThumbUp() bool {
	if m != nil {
		return m.IsThumbUp
	}
	return false
}

func (m *Info) GetThumbUpList() []string {
	if m != nil {
		return m.ThumbUpList
	}
	return nil
}

func (m *Info) GetThumbDown() int64 {
	if m != nil {
		return m.ThumbDown
	}
	return 0
}

func (m *Info) GetIsThumbDown() bool {
	if m != nil {
		return m.IsThumbDown
	}
	return false
}

func (m *Info) GetThumbDownList() []string {
	if m != nil {
		return m.ThumbDownList
	}
	return nil
}

func (m *Info) GetFavorites() int64 {
	if m != nil {
		return m.Favorites
	}
	return 0
}

func (m *Info) GetIsFavorite() bool {
	if m != nil {
		return m.IsFavorite
	}
	return false
}

func (m *Info) GetFavoriteList() []string {
	if m != nil {
		return m.FavoriteList
	}
	return nil
}

func (m *Info) GetLastModifyTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastModifyTime
	}
	return nil
}

func (m *Info) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type GetTagReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Uid                  string   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagReq) Reset()         { *m = GetTagReq{} }
func (m *GetTagReq) String() string { return proto.CompactTextString(m) }
func (*GetTagReq) ProtoMessage()    {}
func (*GetTagReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{3}
}
func (m *GetTagReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagReq.Unmarshal(m, b)
}
func (m *GetTagReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagReq.Marshal(b, m, deterministic)
}
func (dst *GetTagReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagReq.Merge(dst, src)
}
func (m *GetTagReq) XXX_Size() int {
	return xxx_messageInfo_GetTagReq.Size(m)
}
func (m *GetTagReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagReq proto.InternalMessageInfo

func (m *GetTagReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTagReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetTagReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *GetTagReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type UIDPageReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Uid                  string   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIDPageReq) Reset()         { *m = UIDPageReq{} }
func (m *UIDPageReq) String() string { return proto.CompactTextString(m) }
func (*UIDPageReq) ProtoMessage()    {}
func (*UIDPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{4}
}
func (m *UIDPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIDPageReq.Unmarshal(m, b)
}
func (m *UIDPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIDPageReq.Marshal(b, m, deterministic)
}
func (dst *UIDPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDPageReq.Merge(dst, src)
}
func (m *UIDPageReq) XXX_Size() int {
	return xxx_messageInfo_UIDPageReq.Size(m)
}
func (m *UIDPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_UIDPageReq proto.InternalMessageInfo

func (m *UIDPageReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UIDPageReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UIDPageReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *UIDPageReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetTagsResp struct {
	Tags                 []*Tag   `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsResp) Reset()         { *m = GetTagsResp{} }
func (m *GetTagsResp) String() string { return proto.CompactTextString(m) }
func (*GetTagsResp) ProtoMessage()    {}
func (*GetTagsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{5}
}
func (m *GetTagsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsResp.Unmarshal(m, b)
}
func (m *GetTagsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsResp.Marshal(b, m, deterministic)
}
func (dst *GetTagsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsResp.Merge(dst, src)
}
func (m *GetTagsResp) XXX_Size() int {
	return xxx_messageInfo_GetTagsResp.Size(m)
}
func (m *GetTagsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsResp proto.InternalMessageInfo

func (m *GetTagsResp) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type PublishInfoReq struct {
	Uid                  string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string            `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Tags                 []string          `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	CoverResources       map[string]string `protobuf:"bytes,5,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanReview            bool              `protobuf:"varint,6,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishInfoReq) Reset()         { *m = PublishInfoReq{} }
func (m *PublishInfoReq) String() string { return proto.CompactTextString(m) }
func (*PublishInfoReq) ProtoMessage()    {}
func (*PublishInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{6}
}
func (m *PublishInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInfoReq.Unmarshal(m, b)
}
func (m *PublishInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInfoReq.Marshal(b, m, deterministic)
}
func (dst *PublishInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInfoReq.Merge(dst, src)
}
func (m *PublishInfoReq) XXX_Size() int {
	return xxx_messageInfo_PublishInfoReq.Size(m)
}
func (m *PublishInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInfoReq proto.InternalMessageInfo

func (m *PublishInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PublishInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PublishInfoReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *PublishInfoReq) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishInfoReq) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *PublishInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type EditInfoReq struct {
	InfoID               string            `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Uid                  string            `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string            `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Tags                 []string          `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	CoverResources       map[string]string `protobuf:"bytes,6,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanReview            bool              `protobuf:"varint,7,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EditInfoReq) Reset()         { *m = EditInfoReq{} }
func (m *EditInfoReq) String() string { return proto.CompactTextString(m) }
func (*EditInfoReq) ProtoMessage()    {}
func (*EditInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{7}
}
func (m *EditInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditInfoReq.Unmarshal(m, b)
}
func (m *EditInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditInfoReq.Marshal(b, m, deterministic)
}
func (dst *EditInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditInfoReq.Merge(dst, src)
}
func (m *EditInfoReq) XXX_Size() int {
	return xxx_messageInfo_EditInfoReq.Size(m)
}
func (m *EditInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditInfoReq proto.InternalMessageInfo

func (m *EditInfoReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *EditInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *EditInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditInfoReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *EditInfoReq) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EditInfoReq) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *EditInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type GetInfoReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoReq) Reset()         { *m = GetInfoReq{} }
func (m *GetInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetInfoReq) ProtoMessage()    {}
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{8}
}
func (m *GetInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoReq.Unmarshal(m, b)
}
func (m *GetInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoReq.Marshal(b, m, deterministic)
}
func (dst *GetInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoReq.Merge(dst, src)
}
func (m *GetInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetInfoReq.Size(m)
}
func (m *GetInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoReq proto.InternalMessageInfo

func (m *GetInfoReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *GetInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetInfosReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Uid                  string   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Tags                 []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfosReq) Reset()         { *m = GetInfosReq{} }
func (m *GetInfosReq) String() string { return proto.CompactTextString(m) }
func (*GetInfosReq) ProtoMessage()    {}
func (*GetInfosReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{9}
}
func (m *GetInfosReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfosReq.Unmarshal(m, b)
}
func (m *GetInfosReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfosReq.Marshal(b, m, deterministic)
}
func (dst *GetInfosReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfosReq.Merge(dst, src)
}
func (m *GetInfosReq) XXX_Size() int {
	return xxx_messageInfo_GetInfosReq.Size(m)
}
func (m *GetInfosReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfosReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfosReq proto.InternalMessageInfo

func (m *GetInfosReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetInfosReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetInfosReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *GetInfosReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *GetInfosReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetInfosReq) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type GetInfosResp struct {
	Infos                []*Info  `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfosResp) Reset()         { *m = GetInfosResp{} }
func (m *GetInfosResp) String() string { return proto.CompactTextString(m) }
func (*GetInfosResp) ProtoMessage()    {}
func (*GetInfosResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{10}
}
func (m *GetInfosResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfosResp.Unmarshal(m, b)
}
func (m *GetInfosResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfosResp.Marshal(b, m, deterministic)
}
func (dst *GetInfosResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfosResp.Merge(dst, src)
}
func (m *GetInfosResp) XXX_Size() int {
	return xxx_messageInfo_GetInfosResp.Size(m)
}
func (m *GetInfosResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfosResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfosResp proto.InternalMessageInfo

func (m *GetInfosResp) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

type InfoIDReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIDReq) Reset()         { *m = InfoIDReq{} }
func (m *InfoIDReq) String() string { return proto.CompactTextString(m) }
func (*InfoIDReq) ProtoMessage()    {}
func (*InfoIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{11}
}
func (m *InfoIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDReq.Unmarshal(m, b)
}
func (m *InfoIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDReq.Marshal(b, m, deterministic)
}
func (dst *InfoIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDReq.Merge(dst, src)
}
func (m *InfoIDReq) XXX_Size() int {
	return xxx_messageInfo_InfoIDReq.Size(m)
}
func (m *InfoIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDReq proto.InternalMessageInfo

func (m *InfoIDReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type InfoIDAndUIDReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	InfoID               string   `protobuf:"bytes,2,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIDAndUIDReq) Reset()         { *m = InfoIDAndUIDReq{} }
func (m *InfoIDAndUIDReq) String() string { return proto.CompactTextString(m) }
func (*InfoIDAndUIDReq) ProtoMessage()    {}
func (*InfoIDAndUIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{12}
}
func (m *InfoIDAndUIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDAndUIDReq.Unmarshal(m, b)
}
func (m *InfoIDAndUIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDAndUIDReq.Marshal(b, m, deterministic)
}
func (dst *InfoIDAndUIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDAndUIDReq.Merge(dst, src)
}
func (m *InfoIDAndUIDReq) XXX_Size() int {
	return xxx_messageInfo_InfoIDAndUIDReq.Size(m)
}
func (m *InfoIDAndUIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDAndUIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDAndUIDReq proto.InternalMessageInfo

func (m *InfoIDAndUIDReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *InfoIDAndUIDReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type InfoIDPageReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Page                 uint32   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIDPageReq) Reset()         { *m = InfoIDPageReq{} }
func (m *InfoIDPageReq) String() string { return proto.CompactTextString(m) }
func (*InfoIDPageReq) ProtoMessage()    {}
func (*InfoIDPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{13}
}
func (m *InfoIDPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDPageReq.Unmarshal(m, b)
}
func (m *InfoIDPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDPageReq.Marshal(b, m, deterministic)
}
func (dst *InfoIDPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDPageReq.Merge(dst, src)
}
func (m *InfoIDPageReq) XXX_Size() int {
	return xxx_messageInfo_InfoIDPageReq.Size(m)
}
func (m *InfoIDPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDPageReq proto.InternalMessageInfo

func (m *InfoIDPageReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *InfoIDPageReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *InfoIDPageReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InfoIDPageReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type UIDWithTime struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UIDWithTime) Reset()         { *m = UIDWithTime{} }
func (m *UIDWithTime) String() string { return proto.CompactTextString(m) }
func (*UIDWithTime) ProtoMessage()    {}
func (*UIDWithTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{14}
}
func (m *UIDWithTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIDWithTime.Unmarshal(m, b)
}
func (m *UIDWithTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIDWithTime.Marshal(b, m, deterministic)
}
func (dst *UIDWithTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDWithTime.Merge(dst, src)
}
func (m *UIDWithTime) XXX_Size() int {
	return xxx_messageInfo_UIDWithTime.Size(m)
}
func (m *UIDWithTime) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDWithTime.DiscardUnknown(m)
}

var xxx_messageInfo_UIDWithTime proto.InternalMessageInfo

func (m *UIDWithTime) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UIDWithTime) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type UserIDsResp struct {
	Items                []*UIDWithTime `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserIDsResp) Reset()         { *m = UserIDsResp{} }
func (m *UserIDsResp) String() string { return proto.CompactTextString(m) }
func (*UserIDsResp) ProtoMessage()    {}
func (*UserIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{15}
}
func (m *UserIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIDsResp.Unmarshal(m, b)
}
func (m *UserIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIDsResp.Marshal(b, m, deterministic)
}
func (dst *UserIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIDsResp.Merge(dst, src)
}
func (m *UserIDsResp) XXX_Size() int {
	return xxx_messageInfo_UserIDsResp.Size(m)
}
func (m *UserIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserIDsResp proto.InternalMessageInfo

func (m *UserIDsResp) GetItems() []*UIDWithTime {
	if m != nil {
		return m.Items
	}
	return nil
}

type InfoIDWithTime struct {
	InfoId               string               `protobuf:"bytes,1,opt,name=infoId,proto3" json:"infoId,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InfoIDWithTime) Reset()         { *m = InfoIDWithTime{} }
func (m *InfoIDWithTime) String() string { return proto.CompactTextString(m) }
func (*InfoIDWithTime) ProtoMessage()    {}
func (*InfoIDWithTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{16}
}
func (m *InfoIDWithTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDWithTime.Unmarshal(m, b)
}
func (m *InfoIDWithTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDWithTime.Marshal(b, m, deterministic)
}
func (dst *InfoIDWithTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDWithTime.Merge(dst, src)
}
func (m *InfoIDWithTime) XXX_Size() int {
	return xxx_messageInfo_InfoIDWithTime.Size(m)
}
func (m *InfoIDWithTime) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDWithTime.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDWithTime proto.InternalMessageInfo

func (m *InfoIDWithTime) GetInfoId() string {
	if m != nil {
		return m.InfoId
	}
	return ""
}

func (m *InfoIDWithTime) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type InfoIDsResp struct {
	Ids                  []*InfoIDWithTime `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InfoIDsResp) Reset()         { *m = InfoIDsResp{} }
func (m *InfoIDsResp) String() string { return proto.CompactTextString(m) }
func (*InfoIDsResp) ProtoMessage()    {}
func (*InfoIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_b12e9453f1a6eda9, []int{17}
}
func (m *InfoIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDsResp.Unmarshal(m, b)
}
func (m *InfoIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDsResp.Marshal(b, m, deterministic)
}
func (dst *InfoIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDsResp.Merge(dst, src)
}
func (m *InfoIDsResp) XXX_Size() int {
	return xxx_messageInfo_InfoIDsResp.Size(m)
}
func (m *InfoIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDsResp proto.InternalMessageInfo

func (m *InfoIDsResp) GetIds() []*InfoIDWithTime {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*Sort)(nil), "teddy.srv.content.Sort")
	proto.RegisterType((*Tag)(nil), "teddy.srv.content.Tag")
	proto.RegisterType((*Info)(nil), "teddy.srv.content.Info")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.Info.CoverResourcesEntry")
	proto.RegisterType((*GetTagReq)(nil), "teddy.srv.content.GetTagReq")
	proto.RegisterType((*UIDPageReq)(nil), "teddy.srv.content.UIDPageReq")
	proto.RegisterType((*GetTagsResp)(nil), "teddy.srv.content.GetTagsResp")
	proto.RegisterType((*PublishInfoReq)(nil), "teddy.srv.content.PublishInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.PublishInfoReq.CoverResourcesEntry")
	proto.RegisterType((*EditInfoReq)(nil), "teddy.srv.content.EditInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.EditInfoReq.CoverResourcesEntry")
	proto.RegisterType((*GetInfoReq)(nil), "teddy.srv.content.GetInfoReq")
	proto.RegisterType((*GetInfosReq)(nil), "teddy.srv.content.GetInfosReq")
	proto.RegisterType((*GetInfosResp)(nil), "teddy.srv.content.GetInfosResp")
	proto.RegisterType((*InfoIDReq)(nil), "teddy.srv.content.InfoIDReq")
	proto.RegisterType((*InfoIDAndUIDReq)(nil), "teddy.srv.content.InfoIDAndUIDReq")
	proto.RegisterType((*InfoIDPageReq)(nil), "teddy.srv.content.InfoIDPageReq")
	proto.RegisterType((*UIDWithTime)(nil), "teddy.srv.content.UIDWithTime")
	proto.RegisterType((*UserIDsResp)(nil), "teddy.srv.content.UserIDsResp")
	proto.RegisterType((*InfoIDWithTime)(nil), "teddy.srv.content.InfoIDWithTime")
	proto.RegisterType((*InfoIDsResp)(nil), "teddy.srv.content.InfoIDsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentClient is the client API for Content service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentClient interface {
	GetTags(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*GetTagsResp, error)
	PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*empty.Empty, error)
	EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetInfo(ctx context.Context, in *GetInfoReq, opts ...grpc.CallOption) (*Info, error)
	GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*GetInfosResp, error)
	DeleteInfo(ctx context.Context, in *InfoIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	WatchInfo(ctx context.Context, in *InfoIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	ThumbUp(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteThumbUp(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserThumbUp(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoThumbUp(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
	ThumbDown(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteThumbDown(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserThumbDown(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoThumbDown(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
	Favorite(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteFavorite(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserFavorite(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoFavorite(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
}

type contentClient struct {
	cc *grpc.ClientConn
}

func NewContentClient(cc *grpc.ClientConn) ContentClient {
	return &contentClient{cc}
}

func (c *contentClient) GetTags(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*GetTagsResp, error) {
	out := new(GetTagsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/PublishInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/EditInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfo(ctx context.Context, in *GetInfoReq, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*GetInfosResp, error) {
	out := new(GetInfosResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteInfo(ctx context.Context, in *InfoIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) WatchInfo(ctx context.Context, in *InfoIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/WatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) ThumbUp(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/ThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteThumbUp(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserThumbUp(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoThumbUp(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) ThumbDown(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/ThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteThumbDown(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserThumbDown(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoThumbDown(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) Favorite(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/Favorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteFavorite(ctx context.Context, in *InfoIDAndUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserFavorite(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoFavorite(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServer is the server API for Content service.
type ContentServer interface {
	GetTags(context.Context, *GetTagReq) (*GetTagsResp, error)
	PublishInfo(context.Context, *PublishInfoReq) (*empty.Empty, error)
	EditInfo(context.Context, *EditInfoReq) (*empty.Empty, error)
	GetInfo(context.Context, *GetInfoReq) (*Info, error)
	GetInfos(context.Context, *GetInfosReq) (*GetInfosResp, error)
	DeleteInfo(context.Context, *InfoIDReq) (*empty.Empty, error)
	WatchInfo(context.Context, *InfoIDReq) (*empty.Empty, error)
	ThumbUp(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	DeleteThumbUp(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	GetUserThumbUp(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoThumbUp(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
	ThumbDown(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	DeleteThumbDown(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	GetUserThumbDown(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoThumbDown(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
	Favorite(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	DeleteFavorite(context.Context, *InfoIDAndUIDReq) (*empty.Empty, error)
	GetUserFavorite(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoFavorite(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
}

func RegisterContentServer(s *grpc.Server, srv ContentServer) {
	s.RegisterService(&_Content_serviceDesc, srv)
}

func _Content_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetTags(ctx, req.(*GetTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_PublishInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).PublishInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/PublishInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).PublishInfo(ctx, req.(*PublishInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_EditInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).EditInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/EditInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).EditInfo(ctx, req.(*EditInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfo(ctx, req.(*GetInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfosReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfos(ctx, req.(*GetInfosReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteInfo(ctx, req.(*InfoIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_WatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).WatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/WatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).WatchInfo(ctx, req.(*InfoIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_ThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).ThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/ThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).ThumbUp(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteThumbUp(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserThumbUp(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoThumbUp(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_ThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).ThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/ThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).ThumbDown(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteThumbDown(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserThumbDown(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoThumbDown(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_Favorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).Favorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/Favorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).Favorite(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDAndUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteFavorite(ctx, req.(*InfoIDAndUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserFavorite(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoFavorite(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Content_serviceDesc = grpc.ServiceDesc{
	ServiceName: "teddy.srv.content.Content",
	HandlerType: (*ContentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTags",
			Handler:    _Content_GetTags_Handler,
		},
		{
			MethodName: "PublishInfo",
			Handler:    _Content_PublishInfo_Handler,
		},
		{
			MethodName: "EditInfo",
			Handler:    _Content_EditInfo_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _Content_GetInfo_Handler,
		},
		{
			MethodName: "GetInfos",
			Handler:    _Content_GetInfos_Handler,
		},
		{
			MethodName: "DeleteInfo",
			Handler:    _Content_DeleteInfo_Handler,
		},
		{
			MethodName: "WatchInfo",
			Handler:    _Content_WatchInfo_Handler,
		},
		{
			MethodName: "ThumbUp",
			Handler:    _Content_ThumbUp_Handler,
		},
		{
			MethodName: "DeleteThumbUp",
			Handler:    _Content_DeleteThumbUp_Handler,
		},
		{
			MethodName: "GetUserThumbUp",
			Handler:    _Content_GetUserThumbUp_Handler,
		},
		{
			MethodName: "GetInfoThumbUp",
			Handler:    _Content_GetInfoThumbUp_Handler,
		},
		{
			MethodName: "ThumbDown",
			Handler:    _Content_ThumbDown_Handler,
		},
		{
			MethodName: "DeleteThumbDown",
			Handler:    _Content_DeleteThumbDown_Handler,
		},
		{
			MethodName: "GetUserThumbDown",
			Handler:    _Content_GetUserThumbDown_Handler,
		},
		{
			MethodName: "GetInfoThumbDown",
			Handler:    _Content_GetInfoThumbDown_Handler,
		},
		{
			MethodName: "Favorite",
			Handler:    _Content_Favorite_Handler,
		},
		{
			MethodName: "DeleteFavorite",
			Handler:    _Content_DeleteFavorite_Handler,
		},
		{
			MethodName: "GetUserFavorite",
			Handler:    _Content_GetUserFavorite_Handler,
		},
		{
			MethodName: "GetInfoFavorite",
			Handler:    _Content_GetInfoFavorite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/zhsyourai/teddy-backend/common/proto/content.proto",
}

func init() {
	proto.RegisterFile("github.com/zhsyourai/teddy-backend/common/proto/content.proto", fileDescriptor_content_b12e9453f1a6eda9)
}

var fileDescriptor_content_b12e9453f1a6eda9 = []byte{
	// 1228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcf, 0x6e, 0xdb, 0xc6,
	0x13, 0xb6, 0xfe, 0x5b, 0xc3, 0x48, 0x76, 0x36, 0xf9, 0xd9, 0x84, 0xe0, 0xf8, 0xa7, 0xb0, 0x3d,
	0x18, 0x6d, 0x23, 0x01, 0x76, 0x5b, 0xb4, 0x49, 0x73, 0x88, 0x2d, 0xd7, 0x55, 0x51, 0x37, 0x29,
	0x2d, 0x35, 0x45, 0x80, 0x1e, 0x68, 0x71, 0x4d, 0x13, 0x96, 0x48, 0x95, 0xbb, 0xb4, 0xa1, 0x1c,
	0x7a, 0xec, 0x73, 0xf4, 0xd4, 0xbe, 0x42, 0x1f, 0xa4, 0x0f, 0x54, 0xec, 0x2c, 0x97, 0xa2, 0x22,
	0x52, 0xb2, 0x61, 0x27, 0x17, 0x7b, 0x77, 0x38, 0xf3, 0xcd, 0xb7, 0xdf, 0xec, 0x8c, 0x48, 0x78,
	0xee, 0xb8, 0xfc, 0x3c, 0x3c, 0x6d, 0x0d, 0xfc, 0x51, 0xfb, 0xed, 0x39, 0x9b, 0xf8, 0x61, 0x60,
	0xb9, 0x6d, 0x4e, 0x6d, 0x7b, 0xf2, 0xe4, 0xd4, 0x1a, 0x5c, 0x50, 0xcf, 0x6e, 0x0f, 0xfc, 0xd1,
	0xc8, 0xf7, 0xda, 0xe3, 0xc0, 0xe7, 0x7e, 0x7b, 0xe0, 0x7b, 0x9c, 0x7a, 0xbc, 0x85, 0x3b, 0x72,
	0x1f, 0x3d, 0x5b, 0x2c, 0xb8, 0x6c, 0x45, 0x0f, 0x1a, 0x7b, 0x09, 0x44, 0xc7, 0x1f, 0x5a, 0x9e,
	0x23, 0x23, 0x4f, 0xc3, 0xb3, 0xf6, 0x98, 0x4f, 0xc6, 0x94, 0xb5, 0xe9, 0x68, 0xcc, 0x27, 0xf2,
	0xaf, 0xc4, 0x69, 0x3c, 0x5b, 0x1e, 0xc4, 0xdd, 0x11, 0x65, 0xdc, 0x1a, 0x8d, 0xa7, 0x2b, 0x19,
	0x6c, 0x7c, 0x06, 0xc5, 0x13, 0x3f, 0xe0, 0x84, 0x40, 0xd1, 0xb3, 0x46, 0x54, 0xcf, 0x35, 0x73,
	0x3b, 0x55, 0x13, 0xd7, 0x64, 0x1d, 0x0a, 0x16, 0x1b, 0xe8, 0xf9, 0x66, 0x6e, 0x67, 0xd5, 0x14,
	0x4b, 0xe3, 0xef, 0x1c, 0x14, 0x7a, 0x96, 0x23, 0x9e, 0x70, 0xcb, 0x89, 0x9c, 0xc5, 0x92, 0x3c,
	0x84, 0x52, 0xc8, 0x2c, 0x87, 0xa2, 0x77, 0xd1, 0x94, 0x1b, 0xf2, 0x14, 0x60, 0x10, 0x50, 0x8b,
	0xd3, 0x9e, 0x3b, 0xa2, 0x7a, 0xa1, 0x99, 0xdb, 0xd1, 0x76, 0x1b, 0x2d, 0xc7, 0xf7, 0x9d, 0x21,
	0x6d, 0x29, 0x92, 0xad, 0x9e, 0xe2, 0x64, 0x26, 0xbc, 0xc9, 0x37, 0xa0, 0x0d, 0x2d, 0xc6, 0xfb,
	0x4c, 0x06, 0x17, 0x97, 0x06, 0x27, 0xdd, 0x8d, 0x3f, 0x2a, 0x50, 0xec, 0x7a, 0x67, 0xbe, 0xa0,
	0x1a, 0xba, 0xb6, 0xa2, 0x1a, 0xba, 0x36, 0xd9, 0x80, 0xb2, 0xeb, 0x9d, 0xf9, 0xdd, 0x0e, 0x72,
	0xad, 0x9a, 0xd1, 0x4e, 0x1c, 0x81, 0xbb, 0x7c, 0x28, 0x79, 0x56, 0x4d, 0xb9, 0x21, 0x3a, 0x54,
	0xa2, 0xea, 0xe8, 0x25, 0xb4, 0xab, 0xad, 0x20, 0x18, 0x2d, 0x91, 0x60, 0x79, 0x39, 0xc1, 0x84,
	0x3b, 0x39, 0x81, 0xfa, 0xc0, 0xbf, 0xa4, 0x81, 0x49, 0x99, 0x1f, 0x06, 0x03, 0xca, 0xf4, 0x4a,
	0xb3, 0xb0, 0xa3, 0xed, 0x7e, 0xda, 0x9a, 0xbb, 0x16, 0x2d, 0x71, 0x90, 0xd6, 0xc1, 0x8c, 0xf7,
	0xa1, 0xc7, 0x83, 0x89, 0xf9, 0x0e, 0x84, 0xa0, 0x34, 0x0e, 0x4f, 0x87, 0x2e, 0x3b, 0x47, 0x4a,
	0xab, 0xcb, 0x29, 0x25, 0xdc, 0xc9, 0x3e, 0xd4, 0x85, 0x84, 0x26, 0xbd, 0x74, 0xe9, 0x15, 0x02,
	0x54, 0x97, 0x02, 0xbc, 0x13, 0x21, 0x44, 0xbc, 0xb4, 0x86, 0xae, 0xad, 0x03, 0xde, 0x1a, 0xb9,
	0x21, 0xdb, 0x00, 0x57, 0x16, 0x1f, 0x9c, 0x1f, 0xf8, 0xa1, 0xc7, 0x75, 0xad, 0x99, 0xdb, 0x29,
	0x98, 0x09, 0x8b, 0xb8, 0x7d, 0xdc, 0x72, 0x98, 0x7e, 0xaf, 0x59, 0x10, 0xb7, 0x4f, 0xac, 0x85,
	0xf0, 0xfc, 0x3c, 0x1c, 0x9d, 0xf6, 0xc7, 0x7a, 0x0d, 0x03, 0xd4, 0x96, 0x6c, 0x41, 0xd5, 0x65,
	0xbd, 0xe8, 0x59, 0x1d, 0xf3, 0x4c, 0x0d, 0xa4, 0x09, 0x5a, 0xe4, 0xf8, 0x83, 0xcb, 0xb8, 0xbe,
	0x86, 0x90, 0x49, 0x93, 0x88, 0xc7, 0x6d, 0xc7, 0xbf, 0xf2, 0xf4, 0x75, 0xc4, 0x9e, 0x1a, 0x44,
	0x7c, 0x04, 0x86, 0xcf, 0xef, 0x23, 0x7e, 0xd2, 0x44, 0x3e, 0x86, 0x5a, 0xec, 0x8e, 0x39, 0x08,
	0xe6, 0x98, 0x35, 0x8a, 0x2c, 0x67, 0xd6, 0xa5, 0x1f, 0xb8, 0x9c, 0x32, 0xfd, 0x81, 0xcc, 0x12,
	0x1b, 0x84, 0x22, 0x2e, 0xfb, 0x36, 0xda, 0xea, 0x0f, 0x31, 0x49, 0xc2, 0x42, 0x0c, 0xb8, 0xa7,
	0x9c, 0x31, 0xc5, 0xff, 0x30, 0xc5, 0x8c, 0x4d, 0xd5, 0xeb, 0xd8, 0xb7, 0xdd, 0xb3, 0x09, 0xd6,
	0x6b, 0xe3, 0x7a, 0xf5, 0x9a, 0x46, 0x08, 0x96, 0x03, 0xcb, 0x93, 0x05, 0xd4, 0x37, 0xa5, 0x96,
	0xb1, 0xa1, 0xf1, 0x02, 0x1e, 0xa4, 0x5c, 0x3b, 0xd1, 0x53, 0x17, 0x74, 0xa2, 0x7a, 0xea, 0x82,
	0x4e, 0xa2, 0xb2, 0x87, 0x34, 0x6a, 0x29, 0xb9, 0x79, 0x9a, 0xff, 0x2a, 0x67, 0x70, 0xa8, 0x1e,
	0x51, 0xde, 0xb3, 0x1c, 0x93, 0xfe, 0x26, 0xea, 0x3c, 0x16, 0x43, 0x42, 0x44, 0xd6, 0x4c, 0x5c,
	0x0b, 0x1b, 0x73, 0xdf, 0xca, 0xc8, 0x9a, 0x89, 0x6b, 0xf2, 0x04, 0x4a, 0xcc, 0x0f, 0x38, 0xd3,
	0x0b, 0xd8, 0x13, 0x9b, 0x29, 0x3d, 0x21, 0xa6, 0x96, 0x29, 0xbd, 0x54, 0x8f, 0x17, 0xe3, 0x1e,
	0x37, 0x42, 0x80, 0x7e, 0xb7, 0xf3, 0xca, 0x72, 0xe8, 0x07, 0x4d, 0xfb, 0x35, 0x68, 0xf2, 0xb0,
	0xcc, 0xa4, 0x6c, 0x4c, 0x3e, 0x89, 0xae, 0x75, 0x0e, 0xe1, 0x36, 0x52, 0xe0, 0x84, 0x2e, 0xe8,
	0x63, 0xfc, 0x95, 0x87, 0xfa, 0x2b, 0xd9, 0x8c, 0xa2, 0xdd, 0x05, 0xed, 0xf9, 0xd1, 0x15, 0x8f,
	0xa8, 0x7c, 0xc6, 0x88, 0x2a, 0xcc, 0x8e, 0x28, 0xd5, 0x57, 0xc5, 0x44, 0x5f, 0xfd, 0x3a, 0x37,
	0x78, 0x4a, 0x48, 0xef, 0x8b, 0x14, 0x7a, 0xb3, 0x84, 0xae, 0x35, 0x82, 0x66, 0x2e, 0x54, 0xf9,
	0x3d, 0x5c, 0xa8, 0x7f, 0xf2, 0xa0, 0x1d, 0xda, 0x2e, 0x57, 0x2a, 0x4d, 0xc7, 0x79, 0x6e, 0x66,
	0x9c, 0x47, 0xea, 0xe5, 0x53, 0xd4, 0xcb, 0x1a, 0xf0, 0xc5, 0x74, 0xf5, 0x4a, 0x09, 0xf5, 0xde,
	0xcc, 0xa9, 0x57, 0x46, 0xf5, 0x76, 0x53, 0xd4, 0x4b, 0xb0, 0xbc, 0xb9, 0x74, 0x95, 0xf7, 0x20,
	0xdd, 0x97, 0x00, 0x47, 0xf4, 0xe6, 0xc2, 0x19, 0x7f, 0xe6, 0xf0, 0x5e, 0x8b, 0x40, 0xf6, 0x21,
	0xfb, 0x69, 0x5a, 0xb1, 0x52, 0xb2, 0x62, 0xaa, 0x2e, 0xe5, 0x69, 0x5d, 0x8c, 0xe7, 0x70, 0x6f,
	0xca, 0x90, 0x8d, 0x45, 0x6a, 0x71, 0x1c, 0xd5, 0x7b, 0x9b, 0x19, 0xbf, 0xaa, 0xa6, 0xf4, 0x32,
	0x3e, 0x82, 0x6a, 0x17, 0x4f, 0xbf, 0x40, 0x18, 0xe3, 0x19, 0xac, 0x49, 0xa7, 0x17, 0x9e, 0xdd,
	0x97, 0xae, 0xd7, 0x7e, 0xbb, 0x30, 0x7e, 0x87, 0x9a, 0x0c, 0x56, 0x43, 0x29, 0x4b, 0x7e, 0x25,
	0x6e, 0x3e, 0x45, 0xdc, 0x42, 0x9a, 0xb8, 0xc5, 0xeb, 0x88, 0x6b, 0xbc, 0x04, 0xad, 0xdf, 0xed,
	0xbc, 0x76, 0xb9, 0xfc, 0xad, 0x9f, 0x27, 0xde, 0x82, 0xa2, 0x78, 0x39, 0xc4, 0xbc, 0x8b, 0x7f,
	0x43, 0xd0, 0xcf, 0x38, 0x00, 0xad, 0xcf, 0x68, 0xd0, 0xed, 0x48, 0xc1, 0x3f, 0x87, 0x92, 0xcb,
	0xe9, 0x48, 0x09, 0xbe, 0x9d, 0x42, 0x27, 0x91, 0xdf, 0x94, 0xce, 0xc6, 0x2f, 0x50, 0x97, 0xaa,
	0xc4, 0xc4, 0x94, 0x2c, 0xf6, 0x8c, 0x2c, 0x37, 0xa7, 0xb7, 0x0f, 0x9a, 0x44, 0x96, 0xf4, 0xf6,
	0xa0, 0xe0, 0xda, 0x8a, 0xdc, 0xe3, 0x8c, 0xdb, 0x90, 0xe0, 0x27, 0xbc, 0x77, 0xff, 0xd5, 0xa0,
	0x72, 0x10, 0x0d, 0x83, 0x2e, 0x54, 0xa2, 0xd1, 0x4e, 0xb6, 0x52, 0xc2, 0xe3, 0xdf, 0xb8, 0xc6,
	0x76, 0xe6, 0x53, 0x64, 0x62, 0xac, 0x90, 0xef, 0x41, 0x4b, 0x0c, 0x56, 0xf2, 0x78, 0xe9, 0xe0,
	0x6d, 0x6c, 0xcc, 0x1d, 0xf7, 0x50, 0x7c, 0x00, 0x18, 0x2b, 0xa4, 0x03, 0xab, 0x6a, 0xcc, 0x90,
	0xed, 0xc5, 0x33, 0x68, 0x01, 0xca, 0x01, 0x1e, 0x0e, 0x41, 0x1e, 0xa5, 0xd3, 0x57, 0x18, 0x59,
	0x8d, 0x64, 0xac, 0x90, 0x63, 0x58, 0x55, 0x2d, 0x48, 0xb6, 0xb3, 0x51, 0xc4, 0x04, 0x69, 0xfc,
	0x7f, 0xe1, 0x73, 0x54, 0xa9, 0x03, 0xd0, 0xa1, 0x43, 0xca, 0x29, 0xd2, 0xda, 0xca, 0x2c, 0xd9,
	0xb2, 0x93, 0x55, 0x5f, 0x8b, 0xf7, 0xcc, 0x5b, 0x81, 0x1c, 0x41, 0x45, 0xbd, 0x5d, 0x1a, 0x99,
	0x10, 0xf1, 0x50, 0x58, 0x00, 0x74, 0x0c, 0x35, 0x79, 0xa6, 0xbb, 0x81, 0xfb, 0x09, 0xea, 0x47,
	0x54, 0x7c, 0xf2, 0x04, 0x0a, 0xef, 0x51, 0x7a, 0xdb, 0x45, 0x33, 0x27, 0xf5, 0x6e, 0x26, 0xba,
	0xc4, 0x58, 0x21, 0x3d, 0x84, 0x14, 0xb6, 0xf8, 0x7d, 0x3a, 0x33, 0x66, 0x11, 0x6a, 0x62, 0x34,
	0x18, 0x2b, 0xa4, 0x0b, 0xd5, 0xe9, 0xeb, 0xf3, 0xed, 0xce, 0xfc, 0x12, 0xd6, 0x12, 0x12, 0xde,
	0x01, 0xe0, 0x09, 0xac, 0x27, 0x45, 0x44, 0xc4, 0x5b, 0xcb, 0xf8, 0x33, 0x82, 0xc6, 0x32, 0xca,
	0x0f, 0x8b, 0x3b, 0x10, 0xf2, 0x3b, 0x58, 0x9d, 0x7e, 0x22, 0xdc, 0xea, 0xd8, 0x3f, 0x42, 0x5d,
	0xea, 0x78, 0x47, 0x78, 0x26, 0xac, 0x45, 0x32, 0xc6, 0x80, 0xb7, 0x56, 0xb1, 0x8f, 0x98, 0xc2,
	0x16, 0x63, 0xde, 0x81, 0x88, 0xfb, 0x95, 0x37, 0x25, 0x49, 0xbf, 0x8c, 0xff, 0xf6, 0xfe, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x2c, 0xce, 0x53, 0x57, 0xc9, 0x11, 0x00, 0x00,
}
