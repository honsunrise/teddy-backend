// Code generated by protoc-gen-go. DO NOT EDIT.
// source: teddy-backend/common/proto/content/content.proto

package content

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sort struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Asc                  bool     `protobuf:"varint,2,opt,name=asc,proto3" json:"asc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sort) Reset()         { *m = Sort{} }
func (m *Sort) String() string { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()    {}
func (*Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{0}
}
func (m *Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort.Unmarshal(m, b)
}
func (m *Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort.Marshal(b, m, deterministic)
}
func (dst *Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort.Merge(dst, src)
}
func (m *Sort) XXX_Size() int {
	return xxx_messageInfo_Sort.Size(m)
}
func (m *Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_Sort proto.InternalMessageInfo

func (m *Sort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sort) GetAsc() bool {
	if m != nil {
		return m.Asc
	}
	return false
}

type TagResp struct {
	Tag                  string               `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Usage                uint64               `protobuf:"varint,3,opt,name=usage,proto3" json:"usage,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	LastUseTime          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=lastUseTime,proto3" json:"lastUseTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TagResp) Reset()         { *m = TagResp{} }
func (m *TagResp) String() string { return proto.CompactTextString(m) }
func (*TagResp) ProtoMessage()    {}
func (*TagResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{1}
}
func (m *TagResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagResp.Unmarshal(m, b)
}
func (m *TagResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagResp.Marshal(b, m, deterministic)
}
func (dst *TagResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagResp.Merge(dst, src)
}
func (m *TagResp) XXX_Size() int {
	return xxx_messageInfo_TagResp.Size(m)
}
func (m *TagResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TagResp.DiscardUnknown(m)
}

var xxx_messageInfo_TagResp proto.InternalMessageInfo

func (m *TagResp) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TagResp) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TagResp) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *TagResp) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TagResp) GetLastUseTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastUseTime
	}
	return nil
}

type TagsResp struct {
	TotalCount           uint64     `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items                []*TagResp `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TagsResp) Reset()         { *m = TagsResp{} }
func (m *TagsResp) String() string { return proto.CompactTextString(m) }
func (*TagsResp) ProtoMessage()    {}
func (*TagsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{2}
}
func (m *TagsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagsResp.Unmarshal(m, b)
}
func (m *TagsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagsResp.Marshal(b, m, deterministic)
}
func (dst *TagsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagsResp.Merge(dst, src)
}
func (m *TagsResp) XXX_Size() int {
	return xxx_messageInfo_TagsResp.Size(m)
}
func (m *TagsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TagsResp.DiscardUnknown(m)
}

var xxx_messageInfo_TagsResp proto.InternalMessageInfo

func (m *TagsResp) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *TagsResp) GetItems() []*TagResp {
	if m != nil {
		return m.Items
	}
	return nil
}

type TagAndType struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagAndType) Reset()         { *m = TagAndType{} }
func (m *TagAndType) String() string { return proto.CompactTextString(m) }
func (*TagAndType) ProtoMessage()    {}
func (*TagAndType) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{3}
}
func (m *TagAndType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagAndType.Unmarshal(m, b)
}
func (m *TagAndType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagAndType.Marshal(b, m, deterministic)
}
func (dst *TagAndType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagAndType.Merge(dst, src)
}
func (m *TagAndType) XXX_Size() int {
	return xxx_messageInfo_TagAndType.Size(m)
}
func (m *TagAndType) XXX_DiscardUnknown() {
	xxx_messageInfo_TagAndType.DiscardUnknown(m)
}

var xxx_messageInfo_TagAndType proto.InternalMessageInfo

func (m *TagAndType) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TagAndType) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type InfoResp struct {
	InfoID               string               `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Uid                  string               `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Author               string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Title                string               `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Summary              string               `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
	Country              string               `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	ContentTime          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=contentTime,proto3" json:"contentTime,omitempty"`
	CoverResources       map[string]string    `protobuf:"bytes,8,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PublishTime          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=publishTime,proto3" json:"publishTime,omitempty"`
	LastReviewTime       *timestamp.Timestamp `protobuf:"bytes,10,opt,name=lastReviewTime,proto3" json:"lastReviewTime,omitempty"`
	WatchCount           uint64               `protobuf:"varint,11,opt,name=watchCount,proto3" json:"watchCount,omitempty"`
	Tags                 []*TagAndType        `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	ThumbUps             uint64               `protobuf:"varint,13,opt,name=thumbUps,proto3" json:"thumbUps,omitempty"`
	IsThumbUp            bool                 `protobuf:"varint,14,opt,name=isThumbUp,proto3" json:"isThumbUp,omitempty"`
	ThumbUpList          []string             `protobuf:"bytes,15,rep,name=thumbUpList,proto3" json:"thumbUpList,omitempty"`
	ThumbDowns           uint64               `protobuf:"varint,16,opt,name=thumbDowns,proto3" json:"thumbDowns,omitempty"`
	IsThumbDown          bool                 `protobuf:"varint,17,opt,name=isThumbDown,proto3" json:"isThumbDown,omitempty"`
	ThumbDownList        []string             `protobuf:"bytes,18,rep,name=thumbDownList,proto3" json:"thumbDownList,omitempty"`
	Favorites            uint64               `protobuf:"varint,19,opt,name=favorites,proto3" json:"favorites,omitempty"`
	IsFavorite           bool                 `protobuf:"varint,20,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	FavoriteList         []string             `protobuf:"bytes,21,rep,name=favoriteList,proto3" json:"favoriteList,omitempty"`
	LastModifyTime       *timestamp.Timestamp `protobuf:"bytes,22,opt,name=lastModifyTime,proto3" json:"lastModifyTime,omitempty"`
	CanReview            bool                 `protobuf:"varint,23,opt,name=canReview,proto3" json:"canReview,omitempty"`
	Valid                bool                 `protobuf:"varint,24,opt,name=valid,proto3" json:"valid,omitempty"`
	Archived             bool                 `protobuf:"varint,25,opt,name=archived,proto3" json:"archived,omitempty"`
	LatestSegmentID      string               `protobuf:"bytes,26,opt,name=latestSegmentID,proto3" json:"latestSegmentID,omitempty"`
	SegmentCount         uint64               `protobuf:"varint,27,opt,name=segmentCount,proto3" json:"segmentCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InfoResp) Reset()         { *m = InfoResp{} }
func (m *InfoResp) String() string { return proto.CompactTextString(m) }
func (*InfoResp) ProtoMessage()    {}
func (*InfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{4}
}
func (m *InfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResp.Unmarshal(m, b)
}
func (m *InfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResp.Marshal(b, m, deterministic)
}
func (dst *InfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResp.Merge(dst, src)
}
func (m *InfoResp) XXX_Size() int {
	return xxx_messageInfo_InfoResp.Size(m)
}
func (m *InfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResp proto.InternalMessageInfo

func (m *InfoResp) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *InfoResp) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *InfoResp) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *InfoResp) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InfoResp) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *InfoResp) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *InfoResp) GetContentTime() *timestamp.Timestamp {
	if m != nil {
		return m.ContentTime
	}
	return nil
}

func (m *InfoResp) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *InfoResp) GetPublishTime() *timestamp.Timestamp {
	if m != nil {
		return m.PublishTime
	}
	return nil
}

func (m *InfoResp) GetLastReviewTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastReviewTime
	}
	return nil
}

func (m *InfoResp) GetWatchCount() uint64 {
	if m != nil {
		return m.WatchCount
	}
	return 0
}

func (m *InfoResp) GetTags() []*TagAndType {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *InfoResp) GetThumbUps() uint64 {
	if m != nil {
		return m.ThumbUps
	}
	return 0
}

func (m *InfoResp) GetIsThumbUp() bool {
	if m != nil {
		return m.IsThumbUp
	}
	return false
}

func (m *InfoResp) GetThumbUpList() []string {
	if m != nil {
		return m.ThumbUpList
	}
	return nil
}

func (m *InfoResp) GetThumbDowns() uint64 {
	if m != nil {
		return m.ThumbDowns
	}
	return 0
}

func (m *InfoResp) GetIsThumbDown() bool {
	if m != nil {
		return m.IsThumbDown
	}
	return false
}

func (m *InfoResp) GetThumbDownList() []string {
	if m != nil {
		return m.ThumbDownList
	}
	return nil
}

func (m *InfoResp) GetFavorites() uint64 {
	if m != nil {
		return m.Favorites
	}
	return 0
}

func (m *InfoResp) GetIsFavorite() bool {
	if m != nil {
		return m.IsFavorite
	}
	return false
}

func (m *InfoResp) GetFavoriteList() []string {
	if m != nil {
		return m.FavoriteList
	}
	return nil
}

func (m *InfoResp) GetLastModifyTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastModifyTime
	}
	return nil
}

func (m *InfoResp) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

func (m *InfoResp) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *InfoResp) GetArchived() bool {
	if m != nil {
		return m.Archived
	}
	return false
}

func (m *InfoResp) GetLatestSegmentID() string {
	if m != nil {
		return m.LatestSegmentID
	}
	return ""
}

func (m *InfoResp) GetSegmentCount() uint64 {
	if m != nil {
		return m.SegmentCount
	}
	return 0
}

type InfosResp struct {
	TotalCount           uint64      `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items                []*InfoResp `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InfosResp) Reset()         { *m = InfosResp{} }
func (m *InfosResp) String() string { return proto.CompactTextString(m) }
func (*InfosResp) ProtoMessage()    {}
func (*InfosResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{5}
}
func (m *InfosResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfosResp.Unmarshal(m, b)
}
func (m *InfosResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfosResp.Marshal(b, m, deterministic)
}
func (dst *InfosResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfosResp.Merge(dst, src)
}
func (m *InfosResp) XXX_Size() int {
	return xxx_messageInfo_InfosResp.Size(m)
}
func (m *InfosResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfosResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfosResp proto.InternalMessageInfo

func (m *InfosResp) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *InfosResp) GetItems() []*InfoResp {
	if m != nil {
		return m.Items
	}
	return nil
}

type SegmentResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InfoID               string   `protobuf:"bytes,2,opt,name=infoID,proto3" json:"infoID,omitempty"`
	No                   uint64   `protobuf:"varint,3,opt,name=no,proto3" json:"no,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Labels               []string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentResp) Reset()         { *m = SegmentResp{} }
func (m *SegmentResp) String() string { return proto.CompactTextString(m) }
func (*SegmentResp) ProtoMessage()    {}
func (*SegmentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{6}
}
func (m *SegmentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentResp.Unmarshal(m, b)
}
func (m *SegmentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentResp.Marshal(b, m, deterministic)
}
func (dst *SegmentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentResp.Merge(dst, src)
}
func (m *SegmentResp) XXX_Size() int {
	return xxx_messageInfo_SegmentResp.Size(m)
}
func (m *SegmentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentResp.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentResp proto.InternalMessageInfo

func (m *SegmentResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SegmentResp) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *SegmentResp) GetNo() uint64 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *SegmentResp) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SegmentResp) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SegmentsResp struct {
	TotalCount           uint64         `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items                []*SegmentResp `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentsResp) Reset()         { *m = SegmentsResp{} }
func (m *SegmentsResp) String() string { return proto.CompactTextString(m) }
func (*SegmentsResp) ProtoMessage()    {}
func (*SegmentsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{7}
}
func (m *SegmentsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentsResp.Unmarshal(m, b)
}
func (m *SegmentsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentsResp.Marshal(b, m, deterministic)
}
func (dst *SegmentsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentsResp.Merge(dst, src)
}
func (m *SegmentsResp) XXX_Size() int {
	return xxx_messageInfo_SegmentsResp.Size(m)
}
func (m *SegmentsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentsResp.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentsResp proto.InternalMessageInfo

func (m *SegmentsResp) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *SegmentsResp) GetItems() []*SegmentResp {
	if m != nil {
		return m.Items
	}
	return nil
}

type ValueResp struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Value                string               `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ValueResp) Reset()         { *m = ValueResp{} }
func (m *ValueResp) String() string { return proto.CompactTextString(m) }
func (*ValueResp) ProtoMessage()    {}
func (*ValueResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{8}
}
func (m *ValueResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResp.Unmarshal(m, b)
}
func (m *ValueResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResp.Marshal(b, m, deterministic)
}
func (dst *ValueResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResp.Merge(dst, src)
}
func (m *ValueResp) XXX_Size() int {
	return xxx_messageInfo_ValueResp.Size(m)
}
func (m *ValueResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResp.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResp proto.InternalMessageInfo

func (m *ValueResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ValueResp) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ValueResp) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ValuesResp struct {
	TotalCount           uint64       `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items                []*ValueResp `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ValuesResp) Reset()         { *m = ValuesResp{} }
func (m *ValuesResp) String() string { return proto.CompactTextString(m) }
func (*ValuesResp) ProtoMessage()    {}
func (*ValuesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{9}
}
func (m *ValuesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValuesResp.Unmarshal(m, b)
}
func (m *ValuesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValuesResp.Marshal(b, m, deterministic)
}
func (dst *ValuesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValuesResp.Merge(dst, src)
}
func (m *ValuesResp) XXX_Size() int {
	return xxx_messageInfo_ValuesResp.Size(m)
}
func (m *ValuesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ValuesResp.DiscardUnknown(m)
}

var xxx_messageInfo_ValuesResp proto.InternalMessageInfo

func (m *ValuesResp) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ValuesResp) GetItems() []*ValueResp {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetTagsReq struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsReq) Reset()         { *m = GetTagsReq{} }
func (m *GetTagsReq) String() string { return proto.CompactTextString(m) }
func (*GetTagsReq) ProtoMessage()    {}
func (*GetTagsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{10}
}
func (m *GetTagsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsReq.Unmarshal(m, b)
}
func (m *GetTagsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsReq.Marshal(b, m, deterministic)
}
func (dst *GetTagsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsReq.Merge(dst, src)
}
func (m *GetTagsReq) XXX_Size() int {
	return xxx_messageInfo_GetTagsReq.Size(m)
}
func (m *GetTagsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsReq proto.InternalMessageInfo

func (m *GetTagsReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTagsReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetTagsReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetTagsReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type GetTagReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagReq) Reset()         { *m = GetTagReq{} }
func (m *GetTagReq) String() string { return proto.CompactTextString(m) }
func (*GetTagReq) ProtoMessage()    {}
func (*GetTagReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{11}
}
func (m *GetTagReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagReq.Unmarshal(m, b)
}
func (m *GetTagReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagReq.Marshal(b, m, deterministic)
}
func (dst *GetTagReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagReq.Merge(dst, src)
}
func (m *GetTagReq) XXX_Size() int {
	return xxx_messageInfo_GetTagReq.Size(m)
}
func (m *GetTagReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagReq proto.InternalMessageInfo

func (m *GetTagReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UIDPageReq struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Uid                  string   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIDPageReq) Reset()         { *m = UIDPageReq{} }
func (m *UIDPageReq) String() string { return proto.CompactTextString(m) }
func (*UIDPageReq) ProtoMessage()    {}
func (*UIDPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{12}
}
func (m *UIDPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIDPageReq.Unmarshal(m, b)
}
func (m *UIDPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIDPageReq.Marshal(b, m, deterministic)
}
func (dst *UIDPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDPageReq.Merge(dst, src)
}
func (m *UIDPageReq) XXX_Size() int {
	return xxx_messageInfo_UIDPageReq.Size(m)
}
func (m *UIDPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_UIDPageReq proto.InternalMessageInfo

func (m *UIDPageReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UIDPageReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UIDPageReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *UIDPageReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type InfoOneReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoOneReq) Reset()         { *m = InfoOneReq{} }
func (m *InfoOneReq) String() string { return proto.CompactTextString(m) }
func (*InfoOneReq) ProtoMessage()    {}
func (*InfoOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{13}
}
func (m *InfoOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoOneReq.Unmarshal(m, b)
}
func (m *InfoOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoOneReq.Marshal(b, m, deterministic)
}
func (dst *InfoOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoOneReq.Merge(dst, src)
}
func (m *InfoOneReq) XXX_Size() int {
	return xxx_messageInfo_InfoOneReq.Size(m)
}
func (m *InfoOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoOneReq proto.InternalMessageInfo

func (m *InfoOneReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type PublishInfoReq struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Author               string               `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Summary              string               `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	Country              string               `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	Tags                 []*TagAndType        `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	CoverResources       map[string]string    `protobuf:"bytes,7,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanReview            bool                 `protobuf:"varint,8,opt,name=canReview,proto3" json:"canReview,omitempty"`
	ContentTime          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=contentTime,proto3" json:"contentTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PublishInfoReq) Reset()         { *m = PublishInfoReq{} }
func (m *PublishInfoReq) String() string { return proto.CompactTextString(m) }
func (*PublishInfoReq) ProtoMessage()    {}
func (*PublishInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{14}
}
func (m *PublishInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInfoReq.Unmarshal(m, b)
}
func (m *PublishInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInfoReq.Marshal(b, m, deterministic)
}
func (dst *PublishInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInfoReq.Merge(dst, src)
}
func (m *PublishInfoReq) XXX_Size() int {
	return xxx_messageInfo_PublishInfoReq.Size(m)
}
func (m *PublishInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInfoReq proto.InternalMessageInfo

func (m *PublishInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PublishInfoReq) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *PublishInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PublishInfoReq) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *PublishInfoReq) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PublishInfoReq) GetTags() []*TagAndType {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishInfoReq) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *PublishInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

func (m *PublishInfoReq) GetContentTime() *timestamp.Timestamp {
	if m != nil {
		return m.ContentTime
	}
	return nil
}

type PublishInfoResp struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishInfoResp) Reset()         { *m = PublishInfoResp{} }
func (m *PublishInfoResp) String() string { return proto.CompactTextString(m) }
func (*PublishInfoResp) ProtoMessage()    {}
func (*PublishInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{15}
}
func (m *PublishInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInfoResp.Unmarshal(m, b)
}
func (m *PublishInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInfoResp.Marshal(b, m, deterministic)
}
func (dst *PublishInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInfoResp.Merge(dst, src)
}
func (m *PublishInfoResp) XXX_Size() int {
	return xxx_messageInfo_PublishInfoResp.Size(m)
}
func (m *PublishInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInfoResp proto.InternalMessageInfo

func (m *PublishInfoResp) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type EditInfoReq struct {
	InfoID               string               `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Uid                  string               `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Author               string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Title                string               `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Summary              string               `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
	Country              string               `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Tags                 []*TagAndType        `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	CoverResources       map[string]string    `protobuf:"bytes,8,rep,name=coverResources,proto3" json:"coverResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanReview            bool                 `protobuf:"varint,9,opt,name=canReview,proto3" json:"canReview,omitempty"`
	ContentTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=contentTime,proto3" json:"contentTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EditInfoReq) Reset()         { *m = EditInfoReq{} }
func (m *EditInfoReq) String() string { return proto.CompactTextString(m) }
func (*EditInfoReq) ProtoMessage()    {}
func (*EditInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{16}
}
func (m *EditInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditInfoReq.Unmarshal(m, b)
}
func (m *EditInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditInfoReq.Marshal(b, m, deterministic)
}
func (dst *EditInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditInfoReq.Merge(dst, src)
}
func (m *EditInfoReq) XXX_Size() int {
	return xxx_messageInfo_EditInfoReq.Size(m)
}
func (m *EditInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditInfoReq proto.InternalMessageInfo

func (m *EditInfoReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *EditInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *EditInfoReq) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *EditInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditInfoReq) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *EditInfoReq) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *EditInfoReq) GetTags() []*TagAndType {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EditInfoReq) GetCoverResources() map[string]string {
	if m != nil {
		return m.CoverResources
	}
	return nil
}

func (m *EditInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

func (m *EditInfoReq) GetContentTime() *timestamp.Timestamp {
	if m != nil {
		return m.ContentTime
	}
	return nil
}

type GetSegmentsReq struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	InfoID               string   `protobuf:"bytes,3,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Labels               []string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSegmentsReq) Reset()         { *m = GetSegmentsReq{} }
func (m *GetSegmentsReq) String() string { return proto.CompactTextString(m) }
func (*GetSegmentsReq) ProtoMessage()    {}
func (*GetSegmentsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{17}
}
func (m *GetSegmentsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentsReq.Unmarshal(m, b)
}
func (m *GetSegmentsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentsReq.Marshal(b, m, deterministic)
}
func (dst *GetSegmentsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentsReq.Merge(dst, src)
}
func (m *GetSegmentsReq) XXX_Size() int {
	return xxx_messageInfo_GetSegmentsReq.Size(m)
}
func (m *GetSegmentsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentsReq proto.InternalMessageInfo

func (m *GetSegmentsReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetSegmentsReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetSegmentsReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *GetSegmentsReq) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *GetSegmentsReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type PublishSegmentReq struct {
	InfoID               string            `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	No                   uint64            `protobuf:"varint,2,opt,name=no,proto3" json:"no,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Labels               []string          `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Content              map[string]string `protobuf:"bytes,5,rep,name=content,proto3" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishSegmentReq) Reset()         { *m = PublishSegmentReq{} }
func (m *PublishSegmentReq) String() string { return proto.CompactTextString(m) }
func (*PublishSegmentReq) ProtoMessage()    {}
func (*PublishSegmentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{18}
}
func (m *PublishSegmentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishSegmentReq.Unmarshal(m, b)
}
func (m *PublishSegmentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishSegmentReq.Marshal(b, m, deterministic)
}
func (dst *PublishSegmentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishSegmentReq.Merge(dst, src)
}
func (m *PublishSegmentReq) XXX_Size() int {
	return xxx_messageInfo_PublishSegmentReq.Size(m)
}
func (m *PublishSegmentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishSegmentReq.DiscardUnknown(m)
}

var xxx_messageInfo_PublishSegmentReq proto.InternalMessageInfo

func (m *PublishSegmentReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *PublishSegmentReq) GetNo() uint64 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *PublishSegmentReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PublishSegmentReq) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PublishSegmentReq) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

type PublishSegmentResp struct {
	SegID                string   `protobuf:"bytes,1,opt,name=segID,proto3" json:"segID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishSegmentResp) Reset()         { *m = PublishSegmentResp{} }
func (m *PublishSegmentResp) String() string { return proto.CompactTextString(m) }
func (*PublishSegmentResp) ProtoMessage()    {}
func (*PublishSegmentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{19}
}
func (m *PublishSegmentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishSegmentResp.Unmarshal(m, b)
}
func (m *PublishSegmentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishSegmentResp.Marshal(b, m, deterministic)
}
func (dst *PublishSegmentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishSegmentResp.Merge(dst, src)
}
func (m *PublishSegmentResp) XXX_Size() int {
	return xxx_messageInfo_PublishSegmentResp.Size(m)
}
func (m *PublishSegmentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishSegmentResp.DiscardUnknown(m)
}

var xxx_messageInfo_PublishSegmentResp proto.InternalMessageInfo

func (m *PublishSegmentResp) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

type EditSegmentReq struct {
	InfoID               string            `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string            `protobuf:"bytes,2,opt,name=segID,proto3" json:"segID,omitempty"`
	No                   uint64            `protobuf:"varint,3,opt,name=no,proto3" json:"no,omitempty"`
	Title                string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Labels               []string          `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	Content              map[string]string `protobuf:"bytes,6,rep,name=content,proto3" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EditSegmentReq) Reset()         { *m = EditSegmentReq{} }
func (m *EditSegmentReq) String() string { return proto.CompactTextString(m) }
func (*EditSegmentReq) ProtoMessage()    {}
func (*EditSegmentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{20}
}
func (m *EditSegmentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditSegmentReq.Unmarshal(m, b)
}
func (m *EditSegmentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditSegmentReq.Marshal(b, m, deterministic)
}
func (dst *EditSegmentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditSegmentReq.Merge(dst, src)
}
func (m *EditSegmentReq) XXX_Size() int {
	return xxx_messageInfo_EditSegmentReq.Size(m)
}
func (m *EditSegmentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditSegmentReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditSegmentReq proto.InternalMessageInfo

func (m *EditSegmentReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *EditSegmentReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

func (m *EditSegmentReq) GetNo() uint64 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *EditSegmentReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditSegmentReq) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *EditSegmentReq) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

type SegmentOneReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string   `protobuf:"bytes,2,opt,name=segID,proto3" json:"segID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentOneReq) Reset()         { *m = SegmentOneReq{} }
func (m *SegmentOneReq) String() string { return proto.CompactTextString(m) }
func (*SegmentOneReq) ProtoMessage()    {}
func (*SegmentOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{21}
}
func (m *SegmentOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentOneReq.Unmarshal(m, b)
}
func (m *SegmentOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentOneReq.Marshal(b, m, deterministic)
}
func (dst *SegmentOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentOneReq.Merge(dst, src)
}
func (m *SegmentOneReq) XXX_Size() int {
	return xxx_messageInfo_SegmentOneReq.Size(m)
}
func (m *SegmentOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentOneReq proto.InternalMessageInfo

func (m *SegmentOneReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *SegmentOneReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

type GetValuesReq struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	InfoID               string   `protobuf:"bytes,3,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string   `protobuf:"bytes,4,opt,name=segID,proto3" json:"segID,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValuesReq) Reset()         { *m = GetValuesReq{} }
func (m *GetValuesReq) String() string { return proto.CompactTextString(m) }
func (*GetValuesReq) ProtoMessage()    {}
func (*GetValuesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{22}
}
func (m *GetValuesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValuesReq.Unmarshal(m, b)
}
func (m *GetValuesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValuesReq.Marshal(b, m, deterministic)
}
func (dst *GetValuesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValuesReq.Merge(dst, src)
}
func (m *GetValuesReq) XXX_Size() int {
	return xxx_messageInfo_GetValuesReq.Size(m)
}
func (m *GetValuesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValuesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetValuesReq proto.InternalMessageInfo

func (m *GetValuesReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetValuesReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetValuesReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *GetValuesReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

func (m *GetValuesReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type InsertValueReq struct {
	InfoID               string               `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string               `protobuf:"bytes,3,opt,name=segID,proto3" json:"segID,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Value                string               `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InsertValueReq) Reset()         { *m = InsertValueReq{} }
func (m *InsertValueReq) String() string { return proto.CompactTextString(m) }
func (*InsertValueReq) ProtoMessage()    {}
func (*InsertValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{23}
}
func (m *InsertValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertValueReq.Unmarshal(m, b)
}
func (m *InsertValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertValueReq.Marshal(b, m, deterministic)
}
func (dst *InsertValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertValueReq.Merge(dst, src)
}
func (m *InsertValueReq) XXX_Size() int {
	return xxx_messageInfo_InsertValueReq.Size(m)
}
func (m *InsertValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_InsertValueReq proto.InternalMessageInfo

func (m *InsertValueReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *InsertValueReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

func (m *InsertValueReq) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *InsertValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InsertValueResp struct {
	ValueID              string   `protobuf:"bytes,1,opt,name=valueID,proto3" json:"valueID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertValueResp) Reset()         { *m = InsertValueResp{} }
func (m *InsertValueResp) String() string { return proto.CompactTextString(m) }
func (*InsertValueResp) ProtoMessage()    {}
func (*InsertValueResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{24}
}
func (m *InsertValueResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertValueResp.Unmarshal(m, b)
}
func (m *InsertValueResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertValueResp.Marshal(b, m, deterministic)
}
func (dst *InsertValueResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertValueResp.Merge(dst, src)
}
func (m *InsertValueResp) XXX_Size() int {
	return xxx_messageInfo_InsertValueResp.Size(m)
}
func (m *InsertValueResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertValueResp.DiscardUnknown(m)
}

var xxx_messageInfo_InsertValueResp proto.InternalMessageInfo

func (m *InsertValueResp) GetValueID() string {
	if m != nil {
		return m.ValueID
	}
	return ""
}

type EditValueReq struct {
	InfoID               string               `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string               `protobuf:"bytes,3,opt,name=segID,proto3" json:"segID,omitempty"`
	ValID                string               `protobuf:"bytes,4,opt,name=valID,proto3" json:"valID,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Value                string               `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EditValueReq) Reset()         { *m = EditValueReq{} }
func (m *EditValueReq) String() string { return proto.CompactTextString(m) }
func (*EditValueReq) ProtoMessage()    {}
func (*EditValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{25}
}
func (m *EditValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditValueReq.Unmarshal(m, b)
}
func (m *EditValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditValueReq.Marshal(b, m, deterministic)
}
func (dst *EditValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditValueReq.Merge(dst, src)
}
func (m *EditValueReq) XXX_Size() int {
	return xxx_messageInfo_EditValueReq.Size(m)
}
func (m *EditValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditValueReq proto.InternalMessageInfo

func (m *EditValueReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *EditValueReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

func (m *EditValueReq) GetValID() string {
	if m != nil {
		return m.ValID
	}
	return ""
}

func (m *EditValueReq) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EditValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ValueOneReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	SegID                string   `protobuf:"bytes,3,opt,name=segID,proto3" json:"segID,omitempty"`
	ValID                string   `protobuf:"bytes,4,opt,name=valID,proto3" json:"valID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueOneReq) Reset()         { *m = ValueOneReq{} }
func (m *ValueOneReq) String() string { return proto.CompactTextString(m) }
func (*ValueOneReq) ProtoMessage()    {}
func (*ValueOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{26}
}
func (m *ValueOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueOneReq.Unmarshal(m, b)
}
func (m *ValueOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueOneReq.Marshal(b, m, deterministic)
}
func (dst *ValueOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueOneReq.Merge(dst, src)
}
func (m *ValueOneReq) XXX_Size() int {
	return xxx_messageInfo_ValueOneReq.Size(m)
}
func (m *ValueOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_ValueOneReq proto.InternalMessageInfo

func (m *ValueOneReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *ValueOneReq) GetSegID() string {
	if m != nil {
		return m.SegID
	}
	return ""
}

func (m *ValueOneReq) GetValID() string {
	if m != nil {
		return m.ValID
	}
	return ""
}

type GetInfoReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	InfoID               string   `protobuf:"bytes,2,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoReq) Reset()         { *m = GetInfoReq{} }
func (m *GetInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetInfoReq) ProtoMessage()    {}
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{27}
}
func (m *GetInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoReq.Unmarshal(m, b)
}
func (m *GetInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoReq.Marshal(b, m, deterministic)
}
func (dst *GetInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoReq.Merge(dst, src)
}
func (m *GetInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetInfoReq.Size(m)
}
func (m *GetInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoReq proto.InternalMessageInfo

func (m *GetInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *GetInfoReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type GetInfosReq struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Page                 uint64               `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64               `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort              `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Title                string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Tags                 []*TagAndType        `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Country              string               `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetInfosReq) Reset()         { *m = GetInfosReq{} }
func (m *GetInfosReq) String() string { return proto.CompactTextString(m) }
func (*GetInfosReq) ProtoMessage()    {}
func (*GetInfosReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{28}
}
func (m *GetInfosReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfosReq.Unmarshal(m, b)
}
func (m *GetInfosReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfosReq.Marshal(b, m, deterministic)
}
func (dst *GetInfosReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfosReq.Merge(dst, src)
}
func (m *GetInfosReq) XXX_Size() int {
	return xxx_messageInfo_GetInfosReq.Size(m)
}
func (m *GetInfosReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfosReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfosReq proto.InternalMessageInfo

func (m *GetInfosReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *GetInfosReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetInfosReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetInfosReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *GetInfosReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetInfosReq) GetTags() []*TagAndType {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *GetInfosReq) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *GetInfosReq) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GetInfosReq) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type InfoIDWithUIDReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	InfoID               string   `protobuf:"bytes,2,opt,name=infoID,proto3" json:"infoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIDWithUIDReq) Reset()         { *m = InfoIDWithUIDReq{} }
func (m *InfoIDWithUIDReq) String() string { return proto.CompactTextString(m) }
func (*InfoIDWithUIDReq) ProtoMessage()    {}
func (*InfoIDWithUIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{29}
}
func (m *InfoIDWithUIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDWithUIDReq.Unmarshal(m, b)
}
func (m *InfoIDWithUIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDWithUIDReq.Marshal(b, m, deterministic)
}
func (dst *InfoIDWithUIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDWithUIDReq.Merge(dst, src)
}
func (m *InfoIDWithUIDReq) XXX_Size() int {
	return xxx_messageInfo_InfoIDWithUIDReq.Size(m)
}
func (m *InfoIDWithUIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDWithUIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDWithUIDReq proto.InternalMessageInfo

func (m *InfoIDWithUIDReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *InfoIDWithUIDReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

type InfoIDPageReq struct {
	InfoID               string   `protobuf:"bytes,1,opt,name=infoID,proto3" json:"infoID,omitempty"`
	Page                 uint64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Sorts                []*Sort  `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIDPageReq) Reset()         { *m = InfoIDPageReq{} }
func (m *InfoIDPageReq) String() string { return proto.CompactTextString(m) }
func (*InfoIDPageReq) ProtoMessage()    {}
func (*InfoIDPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{30}
}
func (m *InfoIDPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDPageReq.Unmarshal(m, b)
}
func (m *InfoIDPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDPageReq.Marshal(b, m, deterministic)
}
func (dst *InfoIDPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDPageReq.Merge(dst, src)
}
func (m *InfoIDPageReq) XXX_Size() int {
	return xxx_messageInfo_InfoIDPageReq.Size(m)
}
func (m *InfoIDPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDPageReq proto.InternalMessageInfo

func (m *InfoIDPageReq) GetInfoID() string {
	if m != nil {
		return m.InfoID
	}
	return ""
}

func (m *InfoIDPageReq) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *InfoIDPageReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InfoIDPageReq) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type UIDWithTime struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UIDWithTime) Reset()         { *m = UIDWithTime{} }
func (m *UIDWithTime) String() string { return proto.CompactTextString(m) }
func (*UIDWithTime) ProtoMessage()    {}
func (*UIDWithTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{31}
}
func (m *UIDWithTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIDWithTime.Unmarshal(m, b)
}
func (m *UIDWithTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIDWithTime.Marshal(b, m, deterministic)
}
func (dst *UIDWithTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDWithTime.Merge(dst, src)
}
func (m *UIDWithTime) XXX_Size() int {
	return xxx_messageInfo_UIDWithTime.Size(m)
}
func (m *UIDWithTime) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDWithTime.DiscardUnknown(m)
}

var xxx_messageInfo_UIDWithTime proto.InternalMessageInfo

func (m *UIDWithTime) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UIDWithTime) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type UserIDsResp struct {
	Items                []*UIDWithTime `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserIDsResp) Reset()         { *m = UserIDsResp{} }
func (m *UserIDsResp) String() string { return proto.CompactTextString(m) }
func (*UserIDsResp) ProtoMessage()    {}
func (*UserIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{32}
}
func (m *UserIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIDsResp.Unmarshal(m, b)
}
func (m *UserIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIDsResp.Marshal(b, m, deterministic)
}
func (dst *UserIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIDsResp.Merge(dst, src)
}
func (m *UserIDsResp) XXX_Size() int {
	return xxx_messageInfo_UserIDsResp.Size(m)
}
func (m *UserIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserIDsResp proto.InternalMessageInfo

func (m *UserIDsResp) GetItems() []*UIDWithTime {
	if m != nil {
		return m.Items
	}
	return nil
}

type InfoIDWithTime struct {
	InfoId               string               `protobuf:"bytes,1,opt,name=infoId,proto3" json:"infoId,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InfoIDWithTime) Reset()         { *m = InfoIDWithTime{} }
func (m *InfoIDWithTime) String() string { return proto.CompactTextString(m) }
func (*InfoIDWithTime) ProtoMessage()    {}
func (*InfoIDWithTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{33}
}
func (m *InfoIDWithTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDWithTime.Unmarshal(m, b)
}
func (m *InfoIDWithTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDWithTime.Marshal(b, m, deterministic)
}
func (dst *InfoIDWithTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDWithTime.Merge(dst, src)
}
func (m *InfoIDWithTime) XXX_Size() int {
	return xxx_messageInfo_InfoIDWithTime.Size(m)
}
func (m *InfoIDWithTime) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDWithTime.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDWithTime proto.InternalMessageInfo

func (m *InfoIDWithTime) GetInfoId() string {
	if m != nil {
		return m.InfoId
	}
	return ""
}

func (m *InfoIDWithTime) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type InfoIDsResp struct {
	Items                []*InfoIDWithTime `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InfoIDsResp) Reset()         { *m = InfoIDsResp{} }
func (m *InfoIDsResp) String() string { return proto.CompactTextString(m) }
func (*InfoIDsResp) ProtoMessage()    {}
func (*InfoIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_cdd323d2fa2c3157, []int{34}
}
func (m *InfoIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIDsResp.Unmarshal(m, b)
}
func (m *InfoIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIDsResp.Marshal(b, m, deterministic)
}
func (dst *InfoIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIDsResp.Merge(dst, src)
}
func (m *InfoIDsResp) XXX_Size() int {
	return xxx_messageInfo_InfoIDsResp.Size(m)
}
func (m *InfoIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIDsResp proto.InternalMessageInfo

func (m *InfoIDsResp) GetItems() []*InfoIDWithTime {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Sort)(nil), "teddy.srv.content.Sort")
	proto.RegisterType((*TagResp)(nil), "teddy.srv.content.TagResp")
	proto.RegisterType((*TagsResp)(nil), "teddy.srv.content.TagsResp")
	proto.RegisterType((*TagAndType)(nil), "teddy.srv.content.TagAndType")
	proto.RegisterType((*InfoResp)(nil), "teddy.srv.content.InfoResp")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.InfoResp.CoverResourcesEntry")
	proto.RegisterType((*InfosResp)(nil), "teddy.srv.content.InfosResp")
	proto.RegisterType((*SegmentResp)(nil), "teddy.srv.content.SegmentResp")
	proto.RegisterType((*SegmentsResp)(nil), "teddy.srv.content.SegmentsResp")
	proto.RegisterType((*ValueResp)(nil), "teddy.srv.content.ValueResp")
	proto.RegisterType((*ValuesResp)(nil), "teddy.srv.content.ValuesResp")
	proto.RegisterType((*GetTagsReq)(nil), "teddy.srv.content.GetTagsReq")
	proto.RegisterType((*GetTagReq)(nil), "teddy.srv.content.GetTagReq")
	proto.RegisterType((*UIDPageReq)(nil), "teddy.srv.content.UIDPageReq")
	proto.RegisterType((*InfoOneReq)(nil), "teddy.srv.content.InfoOneReq")
	proto.RegisterType((*PublishInfoReq)(nil), "teddy.srv.content.PublishInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.PublishInfoReq.CoverResourcesEntry")
	proto.RegisterType((*PublishInfoResp)(nil), "teddy.srv.content.PublishInfoResp")
	proto.RegisterType((*EditInfoReq)(nil), "teddy.srv.content.EditInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.EditInfoReq.CoverResourcesEntry")
	proto.RegisterType((*GetSegmentsReq)(nil), "teddy.srv.content.GetSegmentsReq")
	proto.RegisterType((*PublishSegmentReq)(nil), "teddy.srv.content.PublishSegmentReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.PublishSegmentReq.ContentEntry")
	proto.RegisterType((*PublishSegmentResp)(nil), "teddy.srv.content.PublishSegmentResp")
	proto.RegisterType((*EditSegmentReq)(nil), "teddy.srv.content.EditSegmentReq")
	proto.RegisterMapType((map[string]string)(nil), "teddy.srv.content.EditSegmentReq.ContentEntry")
	proto.RegisterType((*SegmentOneReq)(nil), "teddy.srv.content.SegmentOneReq")
	proto.RegisterType((*GetValuesReq)(nil), "teddy.srv.content.GetValuesReq")
	proto.RegisterType((*InsertValueReq)(nil), "teddy.srv.content.InsertValueReq")
	proto.RegisterType((*InsertValueResp)(nil), "teddy.srv.content.InsertValueResp")
	proto.RegisterType((*EditValueReq)(nil), "teddy.srv.content.EditValueReq")
	proto.RegisterType((*ValueOneReq)(nil), "teddy.srv.content.ValueOneReq")
	proto.RegisterType((*GetInfoReq)(nil), "teddy.srv.content.GetInfoReq")
	proto.RegisterType((*GetInfosReq)(nil), "teddy.srv.content.GetInfosReq")
	proto.RegisterType((*InfoIDWithUIDReq)(nil), "teddy.srv.content.InfoIDWithUIDReq")
	proto.RegisterType((*InfoIDPageReq)(nil), "teddy.srv.content.InfoIDPageReq")
	proto.RegisterType((*UIDWithTime)(nil), "teddy.srv.content.UIDWithTime")
	proto.RegisterType((*UserIDsResp)(nil), "teddy.srv.content.UserIDsResp")
	proto.RegisterType((*InfoIDWithTime)(nil), "teddy.srv.content.InfoIDWithTime")
	proto.RegisterType((*InfoIDsResp)(nil), "teddy.srv.content.InfoIDsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentClient is the client API for Content service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentClient interface {
	GetTag(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*TagResp, error)
	GetTags(ctx context.Context, in *GetTagsReq, opts ...grpc.CallOption) (*TagsResp, error)
	GetInfo(ctx context.Context, in *GetInfoReq, opts ...grpc.CallOption) (*InfoResp, error)
	GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*InfosResp, error)
	PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*PublishInfoResp, error)
	EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteInfo(ctx context.Context, in *InfoOneReq, opts ...grpc.CallOption) (*empty.Empty, error)
	WatchInfo(ctx context.Context, in *InfoOneReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetSegments(ctx context.Context, in *GetSegmentsReq, opts ...grpc.CallOption) (*SegmentsResp, error)
	GetSegment(ctx context.Context, in *SegmentOneReq, opts ...grpc.CallOption) (*SegmentResp, error)
	PublishSegment(ctx context.Context, in *PublishSegmentReq, opts ...grpc.CallOption) (*PublishSegmentResp, error)
	EditSegment(ctx context.Context, in *EditSegmentReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteSegment(ctx context.Context, in *SegmentOneReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetValues(ctx context.Context, in *GetValuesReq, opts ...grpc.CallOption) (*ValuesResp, error)
	GetValue(ctx context.Context, in *ValueOneReq, opts ...grpc.CallOption) (*ValueResp, error)
	InsertValue(ctx context.Context, in *InsertValueReq, opts ...grpc.CallOption) (*InsertValueResp, error)
	EditValue(ctx context.Context, in *EditValueReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteValue(ctx context.Context, in *ValueOneReq, opts ...grpc.CallOption) (*empty.Empty, error)
	ThumbUp(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteThumbUp(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserThumbUp(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoThumbUp(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
	ThumbDown(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteThumbDown(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserThumbDown(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoThumbDown(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
	Favorite(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteFavorite(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserFavorite(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error)
	GetInfoFavorite(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error)
}

type contentClient struct {
	cc *grpc.ClientConn
}

func NewContentClient(cc *grpc.ClientConn) ContentClient {
	return &contentClient{cc}
}

func (c *contentClient) GetTag(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*TagResp, error) {
	out := new(TagResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetTags(ctx context.Context, in *GetTagsReq, opts ...grpc.CallOption) (*TagsResp, error) {
	out := new(TagsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfo(ctx context.Context, in *GetInfoReq, opts ...grpc.CallOption) (*InfoResp, error) {
	out := new(InfoResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*InfosResp, error) {
	out := new(InfosResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*PublishInfoResp, error) {
	out := new(PublishInfoResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/PublishInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/EditInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteInfo(ctx context.Context, in *InfoOneReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) WatchInfo(ctx context.Context, in *InfoOneReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/WatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetSegments(ctx context.Context, in *GetSegmentsReq, opts ...grpc.CallOption) (*SegmentsResp, error) {
	out := new(SegmentsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetSegment(ctx context.Context, in *SegmentOneReq, opts ...grpc.CallOption) (*SegmentResp, error) {
	out := new(SegmentResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) PublishSegment(ctx context.Context, in *PublishSegmentReq, opts ...grpc.CallOption) (*PublishSegmentResp, error) {
	out := new(PublishSegmentResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/PublishSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) EditSegment(ctx context.Context, in *EditSegmentReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/EditSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteSegment(ctx context.Context, in *SegmentOneReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetValues(ctx context.Context, in *GetValuesReq, opts ...grpc.CallOption) (*ValuesResp, error) {
	out := new(ValuesResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetValue(ctx context.Context, in *ValueOneReq, opts ...grpc.CallOption) (*ValueResp, error) {
	out := new(ValueResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) InsertValue(ctx context.Context, in *InsertValueReq, opts ...grpc.CallOption) (*InsertValueResp, error) {
	out := new(InsertValueResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/InsertValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) EditValue(ctx context.Context, in *EditValueReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/EditValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteValue(ctx context.Context, in *ValueOneReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) ThumbUp(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/ThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteThumbUp(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserThumbUp(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoThumbUp(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoThumbUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) ThumbDown(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/ThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteThumbDown(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserThumbDown(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoThumbDown(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoThumbDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) Favorite(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/Favorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteFavorite(ctx context.Context, in *InfoIDWithUIDReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/DeleteFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserFavorite(ctx context.Context, in *UIDPageReq, opts ...grpc.CallOption) (*InfoIDsResp, error) {
	out := new(InfoIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetUserFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoFavorite(ctx context.Context, in *InfoIDPageReq, opts ...grpc.CallOption) (*UserIDsResp, error) {
	out := new(UserIDsResp)
	err := c.cc.Invoke(ctx, "/teddy.srv.content.Content/GetInfoFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServer is the server API for Content service.
type ContentServer interface {
	GetTag(context.Context, *GetTagReq) (*TagResp, error)
	GetTags(context.Context, *GetTagsReq) (*TagsResp, error)
	GetInfo(context.Context, *GetInfoReq) (*InfoResp, error)
	GetInfos(context.Context, *GetInfosReq) (*InfosResp, error)
	PublishInfo(context.Context, *PublishInfoReq) (*PublishInfoResp, error)
	EditInfo(context.Context, *EditInfoReq) (*empty.Empty, error)
	DeleteInfo(context.Context, *InfoOneReq) (*empty.Empty, error)
	WatchInfo(context.Context, *InfoOneReq) (*empty.Empty, error)
	GetSegments(context.Context, *GetSegmentsReq) (*SegmentsResp, error)
	GetSegment(context.Context, *SegmentOneReq) (*SegmentResp, error)
	PublishSegment(context.Context, *PublishSegmentReq) (*PublishSegmentResp, error)
	EditSegment(context.Context, *EditSegmentReq) (*empty.Empty, error)
	DeleteSegment(context.Context, *SegmentOneReq) (*empty.Empty, error)
	GetValues(context.Context, *GetValuesReq) (*ValuesResp, error)
	GetValue(context.Context, *ValueOneReq) (*ValueResp, error)
	InsertValue(context.Context, *InsertValueReq) (*InsertValueResp, error)
	EditValue(context.Context, *EditValueReq) (*empty.Empty, error)
	DeleteValue(context.Context, *ValueOneReq) (*empty.Empty, error)
	ThumbUp(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	DeleteThumbUp(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	GetUserThumbUp(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoThumbUp(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
	ThumbDown(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	DeleteThumbDown(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	GetUserThumbDown(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoThumbDown(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
	Favorite(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	DeleteFavorite(context.Context, *InfoIDWithUIDReq) (*empty.Empty, error)
	GetUserFavorite(context.Context, *UIDPageReq) (*InfoIDsResp, error)
	GetInfoFavorite(context.Context, *InfoIDPageReq) (*UserIDsResp, error)
}

func RegisterContentServer(s *grpc.Server, srv ContentServer) {
	s.RegisterService(&_Content_serviceDesc, srv)
}

func _Content_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetTag(ctx, req.(*GetTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetTags(ctx, req.(*GetTagsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfo(ctx, req.(*GetInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfosReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfos(ctx, req.(*GetInfosReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_PublishInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).PublishInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/PublishInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).PublishInfo(ctx, req.(*PublishInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_EditInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).EditInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/EditInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).EditInfo(ctx, req.(*EditInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteInfo(ctx, req.(*InfoOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_WatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).WatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/WatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).WatchInfo(ctx, req.(*InfoOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetSegments(ctx, req.(*GetSegmentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetSegment(ctx, req.(*SegmentOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_PublishSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishSegmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).PublishSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/PublishSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).PublishSegment(ctx, req.(*PublishSegmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_EditSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditSegmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).EditSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/EditSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).EditSegment(ctx, req.(*EditSegmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteSegment(ctx, req.(*SegmentOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValuesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetValues(ctx, req.(*GetValuesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValueOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetValue(ctx, req.(*ValueOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_InsertValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).InsertValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/InsertValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).InsertValue(ctx, req.(*InsertValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_EditValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).EditValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/EditValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).EditValue(ctx, req.(*EditValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValueOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteValue(ctx, req.(*ValueOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_ThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).ThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/ThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).ThumbUp(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteThumbUp(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserThumbUp(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoThumbUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoThumbUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoThumbUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoThumbUp(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_ThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).ThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/ThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).ThumbDown(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteThumbDown(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserThumbDown(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoThumbDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoThumbDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoThumbDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoThumbDown(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_Favorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).Favorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/Favorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).Favorite(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDWithUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/DeleteFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteFavorite(ctx, req.(*InfoIDWithUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetUserFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserFavorite(ctx, req.(*UIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIDPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teddy.srv.content.Content/GetInfoFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoFavorite(ctx, req.(*InfoIDPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Content_serviceDesc = grpc.ServiceDesc{
	ServiceName: "teddy.srv.content.Content",
	HandlerType: (*ContentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTag",
			Handler:    _Content_GetTag_Handler,
		},
		{
			MethodName: "GetTags",
			Handler:    _Content_GetTags_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _Content_GetInfo_Handler,
		},
		{
			MethodName: "GetInfos",
			Handler:    _Content_GetInfos_Handler,
		},
		{
			MethodName: "PublishInfo",
			Handler:    _Content_PublishInfo_Handler,
		},
		{
			MethodName: "EditInfo",
			Handler:    _Content_EditInfo_Handler,
		},
		{
			MethodName: "DeleteInfo",
			Handler:    _Content_DeleteInfo_Handler,
		},
		{
			MethodName: "WatchInfo",
			Handler:    _Content_WatchInfo_Handler,
		},
		{
			MethodName: "GetSegments",
			Handler:    _Content_GetSegments_Handler,
		},
		{
			MethodName: "GetSegment",
			Handler:    _Content_GetSegment_Handler,
		},
		{
			MethodName: "PublishSegment",
			Handler:    _Content_PublishSegment_Handler,
		},
		{
			MethodName: "EditSegment",
			Handler:    _Content_EditSegment_Handler,
		},
		{
			MethodName: "DeleteSegment",
			Handler:    _Content_DeleteSegment_Handler,
		},
		{
			MethodName: "GetValues",
			Handler:    _Content_GetValues_Handler,
		},
		{
			MethodName: "GetValue",
			Handler:    _Content_GetValue_Handler,
		},
		{
			MethodName: "InsertValue",
			Handler:    _Content_InsertValue_Handler,
		},
		{
			MethodName: "EditValue",
			Handler:    _Content_EditValue_Handler,
		},
		{
			MethodName: "DeleteValue",
			Handler:    _Content_DeleteValue_Handler,
		},
		{
			MethodName: "ThumbUp",
			Handler:    _Content_ThumbUp_Handler,
		},
		{
			MethodName: "DeleteThumbUp",
			Handler:    _Content_DeleteThumbUp_Handler,
		},
		{
			MethodName: "GetUserThumbUp",
			Handler:    _Content_GetUserThumbUp_Handler,
		},
		{
			MethodName: "GetInfoThumbUp",
			Handler:    _Content_GetInfoThumbUp_Handler,
		},
		{
			MethodName: "ThumbDown",
			Handler:    _Content_ThumbDown_Handler,
		},
		{
			MethodName: "DeleteThumbDown",
			Handler:    _Content_DeleteThumbDown_Handler,
		},
		{
			MethodName: "GetUserThumbDown",
			Handler:    _Content_GetUserThumbDown_Handler,
		},
		{
			MethodName: "GetInfoThumbDown",
			Handler:    _Content_GetInfoThumbDown_Handler,
		},
		{
			MethodName: "Favorite",
			Handler:    _Content_Favorite_Handler,
		},
		{
			MethodName: "DeleteFavorite",
			Handler:    _Content_DeleteFavorite_Handler,
		},
		{
			MethodName: "GetUserFavorite",
			Handler:    _Content_GetUserFavorite_Handler,
		},
		{
			MethodName: "GetInfoFavorite",
			Handler:    _Content_GetInfoFavorite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "teddy-backend/common/proto/content/content.proto",
}

func init() {
	proto.RegisterFile("teddy-backend/common/proto/content/content.proto", fileDescriptor_content_cdd323d2fa2c3157)
}

var fileDescriptor_content_cdd323d2fa2c3157 = []byte{
	// 1902 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcd, 0x72, 0xe3, 0xc6,
	0x11, 0x16, 0xff, 0x44, 0xa2, 0x29, 0x51, 0xbb, 0x63, 0x67, 0x8d, 0x60, 0x7f, 0x2c, 0x23, 0x9b,
	0x2a, 0xe5, 0xc7, 0x54, 0x56, 0x76, 0x12, 0xd7, 0xc6, 0x39, 0xd8, 0x4b, 0xad, 0xcc, 0x38, 0xce,
	0xae, 0xb1, 0xd2, 0x6e, 0xca, 0x95, 0x3f, 0x88, 0x1c, 0x91, 0xa8, 0x25, 0x01, 0x1a, 0x33, 0xd4,
	0x16, 0x7d, 0xc8, 0x21, 0x95, 0x37, 0xc8, 0x21, 0x79, 0x91, 0x9c, 0x73, 0x4c, 0xe5, 0x90, 0x4b,
	0x1e, 0x25, 0x4f, 0x90, 0x9a, 0x9e, 0x19, 0x60, 0x20, 0x01, 0x24, 0x68, 0x69, 0x53, 0xbe, 0x48,
	0x98, 0xc1, 0xcc, 0xd7, 0xdd, 0x5f, 0xf7, 0x74, 0xf7, 0x80, 0x70, 0x38, 0x0a, 0xf8, 0x78, 0x7e,
	0xda, 0x1d, 0x44, 0xd3, 0xfd, 0xaf, 0xc6, 0x6c, 0x11, 0xcd, 0x63, 0x3f, 0xd8, 0xe7, 0x74, 0x38,
	0x5c, 0xbc, 0x7b, 0xea, 0x0f, 0x5e, 0xd2, 0x70, 0xb8, 0x3f, 0x88, 0xa6, 0xd3, 0x28, 0xdc, 0x9f,
	0xc5, 0x11, 0x8f, 0xf6, 0x07, 0x51, 0xc8, 0x69, 0xc8, 0xf5, 0xff, 0x2e, 0xce, 0x92, 0x9b, 0xb8,
	0xa3, 0xcb, 0xe2, 0xf3, 0xae, 0x7a, 0xe1, 0xbc, 0x67, 0x20, 0x8f, 0xa2, 0x89, 0x1f, 0x8e, 0x24,
	0xc2, 0xe9, 0xfc, 0x6c, 0x7f, 0xc6, 0x17, 0x33, 0xca, 0xf6, 0xe9, 0x74, 0xc6, 0x17, 0xf2, 0xaf,
	0xc4, 0x71, 0x7e, 0xb6, 0x7a, 0x13, 0x0f, 0xa6, 0x94, 0x71, 0x7f, 0x3a, 0x4b, 0x9f, 0xe4, 0x66,
	0xf7, 0x87, 0x50, 0x7f, 0x16, 0xc5, 0x9c, 0x10, 0xa8, 0x87, 0xfe, 0x94, 0xda, 0x95, 0xdd, 0xca,
	0x9e, 0xe5, 0xe1, 0x33, 0xb9, 0x01, 0x35, 0x9f, 0x0d, 0xec, 0xea, 0x6e, 0x65, 0xaf, 0xe5, 0x89,
	0x47, 0xf7, 0x1f, 0x15, 0x68, 0x1e, 0xfb, 0x23, 0x8f, 0xb2, 0x99, 0x78, 0xcb, 0xfd, 0x91, 0xda,
	0x20, 0x1e, 0x05, 0x86, 0x10, 0x87, 0x1b, 0x2c, 0x0f, 0x9f, 0xc9, 0x9b, 0xd0, 0x98, 0x33, 0x7f,
	0x44, 0xed, 0xda, 0x6e, 0x65, 0xaf, 0xee, 0xc9, 0x01, 0x79, 0x08, 0x30, 0x88, 0xa9, 0xcf, 0xe9,
	0x71, 0x30, 0xa5, 0x76, 0x7d, 0xb7, 0xb2, 0xd7, 0x3e, 0x70, 0xba, 0xa3, 0x28, 0x1a, 0x4d, 0x68,
	0x57, 0x2b, 0xdf, 0x3d, 0xd6, 0xba, 0x7a, 0xc6, 0x6a, 0xf2, 0x21, 0xb4, 0x27, 0x3e, 0xe3, 0x27,
	0x4c, 0x6e, 0x6e, 0xac, 0xdc, 0x6c, 0x2e, 0x77, 0x7f, 0x03, 0xad, 0x63, 0x7f, 0xc4, 0xd0, 0x82,
	0x7b, 0x00, 0x3c, 0xe2, 0xfe, 0xe4, 0x51, 0x34, 0x0f, 0x39, 0x1a, 0x52, 0xf7, 0x8c, 0x19, 0xf2,
	0x23, 0x68, 0x04, 0x9c, 0x4e, 0x99, 0x5d, 0xdd, 0xad, 0xa1, 0x8c, 0x4b, 0x0e, 0xeb, 0x2a, 0x32,
	0x3c, 0xb9, 0xd0, 0x3d, 0x00, 0x38, 0xf6, 0x47, 0x1f, 0x85, 0xc3, 0x63, 0x61, 0x7b, 0x29, 0x86,
	0xdc, 0x7f, 0xb7, 0xa0, 0xd5, 0x0f, 0xcf, 0x22, 0x54, 0xe9, 0x16, 0x6c, 0x06, 0xe1, 0x59, 0xd4,
	0xef, 0xa9, 0x5d, 0x6a, 0x24, 0xa0, 0xe6, 0xc1, 0x50, 0xed, 0x13, 0x8f, 0x62, 0xa5, 0x3f, 0xe7,
	0xe3, 0x28, 0x46, 0x66, 0x2d, 0x4f, 0x8d, 0x04, 0xe1, 0x3c, 0xe0, 0x13, 0xc9, 0xaa, 0xe5, 0xc9,
	0x01, 0xb1, 0xa1, 0xc9, 0xe6, 0xd3, 0xa9, 0x1f, 0x2f, 0x90, 0x30, 0xcb, 0xd3, 0x43, 0xf1, 0x66,
	0x20, 0xac, 0x8d, 0x17, 0xf6, 0xa6, 0x7c, 0xa3, 0x86, 0x82, 0x68, 0x65, 0x26, 0x12, 0xdd, 0x5c,
	0x4d, 0xb4, 0xb1, 0x9c, 0xbc, 0x80, 0xce, 0x20, 0x3a, 0xa7, 0xb1, 0x47, 0x59, 0x34, 0x8f, 0x07,
	0x94, 0xd9, 0x2d, 0x64, 0x71, 0x3f, 0x87, 0x45, 0x6d, 0x7e, 0xf7, 0x51, 0x66, 0xc7, 0xa1, 0x50,
	0xc3, 0xbb, 0x00, 0x23, 0xd4, 0x9a, 0xcd, 0x4f, 0x27, 0x01, 0x1b, 0xa3, 0x5a, 0xd6, 0x6a, 0xb5,
	0x8c, 0xe5, 0xe4, 0x63, 0xe8, 0x88, 0x70, 0xf0, 0xe8, 0x79, 0x40, 0x5f, 0x21, 0x00, 0xac, 0x04,
	0xb8, 0xb0, 0x43, 0xc4, 0xcd, 0x2b, 0x9f, 0x0f, 0xc6, 0x32, 0x6e, 0xda, 0x32, 0x6e, 0xd2, 0x19,
	0xf2, 0x00, 0xea, 0xdc, 0x1f, 0x31, 0x7b, 0x0b, 0x0d, 0xbe, 0x9b, 0x1f, 0x36, 0x2a, 0x48, 0x3c,
	0x5c, 0x4a, 0x1c, 0x68, 0xf1, 0xf1, 0x7c, 0x7a, 0x7a, 0x32, 0x63, 0xf6, 0x36, 0x02, 0x26, 0x63,
	0x72, 0x07, 0xac, 0x80, 0x1d, 0xcb, 0x91, 0xdd, 0xc1, 0xc3, 0x98, 0x4e, 0x90, 0x5d, 0x68, 0xab,
	0x95, 0xbf, 0x0c, 0x18, 0xb7, 0x77, 0x76, 0x6b, 0x7b, 0x96, 0x67, 0x4e, 0x61, 0x98, 0x8b, 0x61,
	0x2f, 0x7a, 0x15, 0x32, 0xfb, 0x86, 0x0a, 0xf3, 0x64, 0x46, 0x20, 0x28, 0x38, 0x31, 0xb6, 0x6f,
	0xa2, 0x04, 0x73, 0x8a, 0xdc, 0x87, 0xed, 0x64, 0x3d, 0x4a, 0x21, 0x28, 0x25, 0x3b, 0x29, 0xf4,
	0x3c, 0xf3, 0xcf, 0xa3, 0x38, 0xe0, 0x94, 0xd9, 0x6f, 0xa0, 0x98, 0x74, 0x42, 0x68, 0x11, 0xb0,
	0xc7, 0x6a, 0x68, 0xbf, 0x89, 0x42, 0x8c, 0x19, 0xe2, 0xc2, 0x96, 0x5e, 0x8c, 0x22, 0xbe, 0x85,
	0x22, 0x32, 0x73, 0xda, 0x79, 0x9f, 0x45, 0xc3, 0xe0, 0x6c, 0x81, 0xce, 0xbb, 0x55, 0xce, 0x79,
	0xe9, 0x0e, 0xa1, 0xe5, 0xc0, 0x0f, 0xa5, 0x37, 0xed, 0xb7, 0x24, 0x9b, 0xc9, 0x84, 0x38, 0x3d,
	0xe7, 0xfe, 0x24, 0x18, 0xda, 0x36, 0xbe, 0x91, 0x03, 0xe1, 0x1d, 0x3f, 0x1e, 0x8c, 0x83, 0x73,
	0x3a, 0xb4, 0xbf, 0x8d, 0x2f, 0x92, 0x31, 0xd9, 0x83, 0x9d, 0x89, 0xcf, 0x29, 0xe3, 0xcf, 0xe8,
	0x68, 0x4a, 0x43, 0xde, 0xef, 0xd9, 0x0e, 0x9e, 0xa3, 0x8b, 0xd3, 0xc2, 0x42, 0x26, 0x07, 0x32,
	0x70, 0x6e, 0x23, 0x45, 0x99, 0x39, 0xe7, 0x23, 0x78, 0x23, 0xe7, 0x0c, 0x88, 0xe3, 0xff, 0x92,
	0x2e, 0x74, 0x26, 0x79, 0x49, 0x17, 0x4a, 0xd1, 0xb9, 0x4e, 0x25, 0x72, 0xf0, 0xb0, 0xfa, 0x41,
	0xc5, 0xfd, 0x1d, 0x58, 0xe2, 0x3c, 0x95, 0x4b, 0x71, 0x0f, 0xb2, 0x29, 0xee, 0xf6, 0x92, 0xc3,
	0xa9, 0x73, 0x1c, 0x83, 0xb6, 0xb2, 0x09, 0x25, 0x74, 0xa0, 0x1a, 0x0c, 0x95, 0x66, 0x55, 0x99,
	0x97, 0x54, 0x06, 0xab, 0x66, 0x32, 0x58, 0x07, 0xaa, 0x61, 0xa4, 0xaa, 0x40, 0x35, 0x8c, 0x0a,
	0xf2, 0xd4, 0x2d, 0xd8, 0x9c, 0xf8, 0xa7, 0x74, 0xc2, 0xec, 0x06, 0xfa, 0x5f, 0x8d, 0xdc, 0x21,
	0x6c, 0x29, 0xa1, 0xe5, 0xec, 0x7a, 0x3f, 0x6b, 0xd7, 0xbd, 0x1c, 0xbb, 0x0c, 0x23, 0xb4, 0x69,
	0x3e, 0x58, 0xcf, 0x05, 0x8f, 0xb9, 0x86, 0x75, 0xa1, 0x2e, 0x8a, 0x27, 0x9a, 0xb5, 0x3c, 0xe4,
	0x70, 0x5d, 0xea, 0xa1, 0x9a, 0xe1, 0x21, 0xf7, 0x0f, 0x00, 0x28, 0xa2, 0x9c, 0x19, 0x07, 0x59,
	0x33, 0xee, 0xe4, 0x98, 0x91, 0x28, 0xac, 0x8d, 0x78, 0x05, 0x70, 0x44, 0xb9, 0x2c, 0x72, 0x5f,
	0x8a, 0x8a, 0x33, 0x13, 0xe5, 0x57, 0x62, 0xe3, 0xb3, 0x98, 0x63, 0xc1, 0x57, 0xd2, 0x92, 0xba,
	0x87, 0xcf, 0x49, 0x65, 0xaa, 0x19, 0xb5, 0xfb, 0x5d, 0x68, 0xb0, 0x28, 0xe6, 0xcc, 0xae, 0xa3,
	0xf4, 0xb7, 0xf2, 0x48, 0x8c, 0x62, 0xee, 0xc9, 0x55, 0xee, 0x6d, 0xb0, 0xa4, 0x60, 0x21, 0xf7,
	0x02, 0x7b, 0xee, 0x1c, 0xe0, 0xa4, 0xdf, 0x7b, 0xea, 0x8f, 0xe8, 0x3a, 0x5a, 0x25, 0x1a, 0xd4,
	0xca, 0x68, 0xa0, 0xab, 0x64, 0x3d, 0xa9, 0x92, 0xee, 0x7d, 0x00, 0x11, 0xbf, 0x4f, 0x42, 0x14,
	0x5b, 0x50, 0x5d, 0xdd, 0xbf, 0xd7, 0xa0, 0xf3, 0x54, 0x16, 0x09, 0x19, 0xed, 0x5f, 0x6a, 0xa8,
	0x4a, 0x5e, 0xc1, 0xad, 0xe6, 0x17, 0xdc, 0x5a, 0x41, 0xc1, 0xad, 0x17, 0x16, 0xdc, 0x46, 0xb6,
	0xe0, 0xea, 0xba, 0xb1, 0x59, 0xbe, 0x6e, 0xfc, 0xf6, 0x52, 0x95, 0x6d, 0xe2, 0xe6, 0x1f, 0xe7,
	0x6c, 0xce, 0x5a, 0x58, 0xaa, 0xd6, 0x66, 0x92, 0x65, 0xeb, 0x62, 0xb2, 0xbc, 0xd0, 0x20, 0x58,
	0x6b, 0x35, 0x08, 0xd7, 0x91, 0xea, 0xbe, 0x07, 0x3b, 0x19, 0xa3, 0x8a, 0x1b, 0x28, 0xf7, 0x9f,
	0x35, 0x68, 0x1f, 0x0e, 0x03, 0xae, 0xfd, 0xfb, 0x4d, 0x6a, 0xb4, 0xb4, 0xdf, 0x9b, 0xe5, 0xfd,
	0xfe, 0x45, 0x41, 0x77, 0x75, 0x90, 0xb3, 0xd9, 0x30, 0x7b, 0x7d, 0xa7, 0x5b, 0x2b, 0x9c, 0x0e,
	0xff, 0x77, 0xa7, 0xff, 0xb5, 0x02, 0x9d, 0x23, 0xca, 0xd3, 0x72, 0x50, 0x3e, 0x9d, 0xa4, 0x4e,
	0xaf, 0x65, 0x9c, 0x9e, 0x56, 0x9d, 0xba, 0x59, 0x75, 0xd2, 0xf4, 0xd3, 0x28, 0x95, 0x00, 0xff,
	0x5b, 0x81, 0x9b, 0x2a, 0x1e, 0x93, 0xe2, 0x52, 0x1c, 0x69, 0xb2, 0x20, 0x56, 0x2f, 0x17, 0xc4,
	0x5a, 0x7e, 0x41, 0xcc, 0xaa, 0xf6, 0xa9, 0x88, 0x26, 0x54, 0x41, 0x29, 0xf7, 0xa0, 0xf8, 0xc4,
	0xa7, 0xca, 0x74, 0x1f, 0xc9, 0x37, 0xd2, 0xf1, 0x1a, 0xc1, 0x79, 0x08, 0x5b, 0xe6, 0x8b, 0xb5,
	0xdc, 0xf1, 0x7d, 0x20, 0x17, 0xc5, 0xb0, 0x99, 0x58, 0xcf, 0xe8, 0x28, 0xb1, 0x59, 0x0e, 0xdc,
	0x3f, 0x55, 0xa1, 0x23, 0xa2, 0xb1, 0x04, 0x3b, 0x09, 0x40, 0xd5, 0x00, 0xb8, 0x5a, 0x13, 0x41,
	0x3e, 0x49, 0x39, 0x93, 0x29, 0xb6, 0x5b, 0x70, 0x5a, 0x5e, 0x2b, 0x61, 0x3f, 0x87, 0x6d, 0x85,
	0xbf, 0xbc, 0x2a, 0xe5, 0x53, 0xe0, 0xfe, 0xa5, 0x02, 0x5b, 0x47, 0x94, 0xeb, 0x26, 0xe2, 0xea,
	0xc1, 0x9f, 0x88, 0xa9, 0x9b, 0x4c, 0xaf, 0x19, 0xfa, 0x7f, 0xae, 0x40, 0xa7, 0x1f, 0x32, 0x1a,
	0x73, 0xd5, 0x8f, 0x94, 0x30, 0xab, 0x66, 0xca, 0xd3, 0xdd, 0x55, 0x7d, 0xdd, 0xee, 0xaa, 0x61,
	0x76, 0x57, 0x3f, 0x80, 0x9d, 0x8c, 0x16, 0x6c, 0x26, 0xd2, 0x2e, 0xbe, 0x4b, 0xf4, 0xd0, 0x43,
	0xf7, 0x6f, 0x15, 0xd8, 0x12, 0xde, 0xfe, 0x9a, 0x1a, 0x4b, 0x0d, 0x52, 0xde, 0x70, 0x90, 0xd8,
	0xd1, 0x58, 0xd7, 0x8e, 0x4d, 0xd3, 0x8e, 0xcf, 0xa1, 0x8d, 0x5a, 0x95, 0x8d, 0x90, 0xd5, 0x8a,
	0xb9, 0x3f, 0xc1, 0xb6, 0x70, 0x69, 0x7b, 0x93, 0xd7, 0xb7, 0xbb, 0xff, 0xaa, 0x42, 0x5b, 0x6d,
	0x64, 0xf9, 0x3b, 0x75, 0x00, 0x56, 0x73, 0x02, 0xb0, 0x96, 0xd7, 0xcc, 0x95, 0x6a, 0x27, 0xd3,
	0xb3, 0xdd, 0x30, 0xcf, 0xf6, 0xd7, 0xe8, 0x91, 0x8c, 0xc2, 0xdb, 0xcc, 0x16, 0xde, 0x0f, 0xc0,
	0x62, 0xdc, 0x8f, 0x65, 0x25, 0x6b, 0xad, 0xf4, 0x58, 0xba, 0x98, 0xbc, 0x0f, 0x4d, 0x1a, 0x0e,
	0x4b, 0xb6, 0x3d, 0x7a, 0xa9, 0xfb, 0x21, 0xdc, 0xe8, 0x23, 0xab, 0x2f, 0x02, 0x3e, 0x3e, 0xe9,
	0xf7, 0xd6, 0xf3, 0xc4, 0x1f, 0x61, 0x5b, 0xee, 0xd6, 0x5d, 0x74, 0x51, 0x58, 0xbc, 0x1e, 0x87,
	0xb8, 0x4f, 0xa0, 0x7d, 0x22, 0x55, 0x47, 0x0a, 0x2e, 0x2b, 0xbe, 0xe6, 0x0d, 0xc9, 0x7d, 0x04,
	0xed, 0x13, 0x46, 0xe3, 0x7e, 0x4f, 0x5e, 0x86, 0x92, 0x3b, 0x5b, 0xa5, 0xf0, 0xce, 0x66, 0xc8,
	0xd7, 0xd7, 0x9d, 0x5f, 0x8b, 0xc4, 0xa3, 0x39, 0x45, 0xc5, 0x34, 0x2d, 0xc3, 0x0c, 0x2d, 0xeb,
	0xab, 0xf7, 0x18, 0xda, 0x12, 0x59, 0xaa, 0xf7, 0xd3, 0xac, 0x7a, 0xef, 0x14, 0x5c, 0x95, 0x2f,
	0x69, 0x78, 0xf0, 0x1f, 0x02, 0x4d, 0x55, 0x2d, 0x48, 0x0f, 0x36, 0xe5, 0x1d, 0x89, 0xe4, 0xdd,
	0xe5, 0x92, 0xeb, 0x93, 0xb3, 0xe4, 0x5b, 0xa3, 0xbb, 0x41, 0x8e, 0xa0, 0xa9, 0xae, 0x78, 0xe4,
	0x6e, 0x21, 0x8c, 0x38, 0xad, 0xce, 0xed, 0x7c, 0x1c, 0x96, 0x01, 0x12, 0x6a, 0x17, 0x01, 0xa9,
	0x84, 0xe1, 0x2c, 0xfb, 0x32, 0xe0, 0x6e, 0x90, 0x5f, 0x40, 0x4b, 0x27, 0x09, 0x72, 0xaf, 0x18,
	0x09, 0x75, 0xba, 0x53, 0x00, 0xa5, 0x95, 0x7a, 0x0e, 0x6d, 0xa3, 0xab, 0x27, 0xef, 0xac, 0xbc,
	0xca, 0x38, 0xee, 0xaa, 0x25, 0x88, 0xdb, 0x83, 0x96, 0x6e, 0x85, 0x73, 0x75, 0x34, 0xfa, 0x64,
	0xe7, 0xd6, 0xa5, 0xe8, 0x38, 0x9c, 0xce, 0xf8, 0xc2, 0xdd, 0x20, 0x87, 0x00, 0x3d, 0x3a, 0xa1,
	0x9c, 0x16, 0xb2, 0x96, 0x5e, 0x38, 0x97, 0xc0, 0xf4, 0xc0, 0x7a, 0xe1, 0xf3, 0xc1, 0xf8, 0x6a,
	0x28, 0xcf, 0x30, 0x37, 0xeb, 0x56, 0x38, 0x97, 0xaa, 0x6c, 0xab, 0xec, 0xbc, 0x5d, 0xfc, 0x25,
	0x44, 0xf3, 0xff, 0x14, 0x2b, 0x85, 0x9a, 0x24, 0xbb, 0xc5, 0x1b, 0x94, 0x7a, 0x2b, 0x3e, 0xae,
	0xb8, 0x1b, 0xe4, 0xf7, 0xc9, 0xf5, 0x5a, 0xa3, 0xde, 0x2f, 0xd3, 0xad, 0x3a, 0xdf, 0x2d, 0xb1,
	0x4a, 0x85, 0x5f, 0xdb, 0xe8, 0xdb, 0x72, 0x79, 0xc8, 0xf6, 0x75, 0x4b, 0x38, 0xfd, 0x14, 0xb6,
	0xa5, 0x83, 0xcb, 0x33, 0x50, 0x0c, 0xf6, 0x19, 0x7e, 0x13, 0x91, 0xcd, 0x1a, 0x79, 0x3b, 0xdf,
	0x3d, 0x49, 0x2b, 0xe7, 0xdc, 0x2d, 0xfa, 0xbe, 0xc3, 0x32, 0xc7, 0x0c, 0xa7, 0x72, 0x43, 0xd8,
	0x68, 0x1a, 0x9c, 0xa5, 0x1f, 0x8b, 0xe4, 0x31, 0x33, 0x7a, 0x25, 0x92, 0x9f, 0xcf, 0xcc, 0x8e,
	0x2e, 0xf7, 0x98, 0x5d, 0x68, 0xb7, 0xdc, 0x0d, 0xf2, 0x18, 0xac, 0xa4, 0xab, 0xca, 0x35, 0xd9,
	0xec, 0xb9, 0x96, 0x50, 0x77, 0x04, 0x6d, 0xe9, 0x87, 0x72, 0xe6, 0x16, 0x03, 0x7d, 0x02, 0x4d,
	0xfd, 0xb1, 0xfc, 0x3b, 0x4b, 0x93, 0xb6, 0xac, 0xc8, 0x4b, 0x90, 0x7e, 0xa5, 0x43, 0xe3, 0x9a,
	0xf0, 0x3e, 0xc7, 0x9b, 0xac, 0xa8, 0x81, 0x1a, 0xf0, 0x6e, 0x7e, 0xd1, 0x53, 0x15, 0x3f, 0xf7,
	0xa8, 0x19, 0x35, 0xca, 0xdd, 0x20, 0xc7, 0x08, 0x29, 0xe6, 0x92, 0x1f, 0x08, 0x0a, 0xf7, 0x2c,
	0x43, 0x35, 0x0a, 0x33, 0xc6, 0x9d, 0x95, 0xfe, 0x1a, 0x70, 0x45, 0xa3, 0x9f, 0xc2, 0x8e, 0x41,
	0xe2, 0x75, 0x20, 0x3e, 0x83, 0x1b, 0x26, 0x8d, 0x08, 0x79, 0x65, 0x22, 0x9f, 0x23, 0x68, 0x42,
	0x24, 0x82, 0x5e, 0x07, 0x95, 0x7d, 0x68, 0x25, 0xbf, 0x79, 0x5c, 0xd1, 0xee, 0x27, 0xd0, 0x91,
	0x4c, 0x5e, 0x17, 0xa0, 0x07, 0x3b, 0x8a, 0xc8, 0x04, 0xf1, 0xca, 0x3c, 0x9e, 0x20, 0xa6, 0x98,
	0x4b, 0x30, 0xaf, 0x81, 0xc6, 0x8f, 0xad, 0x2f, 0xf4, 0x65, 0xfc, 0x74, 0x13, 0xed, 0x78, 0xef,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x1a, 0xba, 0x62, 0x97, 0x1f, 0x00, 0x00,
}
