// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/notify.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/notify.proto

It has these top-level messages:
	Account
	GetAllResp
	GetByUsernameReq
	DeleteByUsernameReq
	RegisterReq
	VerifyPasswordReq
	ChangePasswordReq
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = google_protobuf.Empty{}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UAA service

type UAAService interface {
	GetAll(ctx context.Context, in *google_protobuf.Empty, opts ...client.CallOption) (*GetAllResp, error)
	GetByUsername(ctx context.Context, in *GetByUsernameReq, opts ...client.CallOption) (*Account, error)
	DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, opts ...client.CallOption) (*google_protobuf.Empty, error)
	Register(ctx context.Context, in *RegisterReq, opts ...client.CallOption) (*Account, error)
	VerifyPassword(ctx context.Context, in *VerifyPasswordReq, opts ...client.CallOption) (*Account, error)
	ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...client.CallOption) (*google_protobuf.Empty, error)
}

type uAAService struct {
	c    client.Client
	name string
}

func NewUAAService(name string, c client.Client) UAAService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "com.teddy.srv.uaa"
	}
	return &uAAService{
		c:    c,
		name: name,
	}
}

func (c *uAAService) GetAll(ctx context.Context, in *google_protobuf.Empty, opts ...client.CallOption) (*GetAllResp, error) {
	req := c.c.NewRequest(c.name, "UAA.GetAll", in)
	out := new(GetAllResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAService) GetByUsername(ctx context.Context, in *GetByUsernameReq, opts ...client.CallOption) (*Account, error) {
	req := c.c.NewRequest(c.name, "UAA.GetByUsername", in)
	out := new(Account)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAService) DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, opts ...client.CallOption) (*google_protobuf.Empty, error) {
	req := c.c.NewRequest(c.name, "UAA.DeleteByUsername", in)
	out := new(google_protobuf.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAService) Register(ctx context.Context, in *RegisterReq, opts ...client.CallOption) (*Account, error) {
	req := c.c.NewRequest(c.name, "UAA.Register", in)
	out := new(Account)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAService) VerifyPassword(ctx context.Context, in *VerifyPasswordReq, opts ...client.CallOption) (*Account, error) {
	req := c.c.NewRequest(c.name, "UAA.VerifyPassword", in)
	out := new(Account)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uAAService) ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...client.CallOption) (*google_protobuf.Empty, error) {
	req := c.c.NewRequest(c.name, "UAA.ChangePassword", in)
	out := new(google_protobuf.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UAA service

type UAAHandler interface {
	GetAll(context.Context, *google_protobuf.Empty, *GetAllResp) error
	GetByUsername(context.Context, *GetByUsernameReq, *Account) error
	DeleteByUsername(context.Context, *DeleteByUsernameReq, *google_protobuf.Empty) error
	Register(context.Context, *RegisterReq, *Account) error
	VerifyPassword(context.Context, *VerifyPasswordReq, *Account) error
	ChangePassword(context.Context, *ChangePasswordReq, *google_protobuf.Empty) error
}

func RegisterUAAHandler(s server.Server, hdlr UAAHandler, opts ...server.HandlerOption) error {
	type uAA interface {
		GetAll(ctx context.Context, in *google_protobuf.Empty, out *GetAllResp) error
		GetByUsername(ctx context.Context, in *GetByUsernameReq, out *Account) error
		DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, out *google_protobuf.Empty) error
		Register(ctx context.Context, in *RegisterReq, out *Account) error
		VerifyPassword(ctx context.Context, in *VerifyPasswordReq, out *Account) error
		ChangePassword(ctx context.Context, in *ChangePasswordReq, out *google_protobuf.Empty) error
	}
	type UAA struct {
		uAA
	}
	h := &uAAHandler{hdlr}
	return s.Handle(s.NewHandler(&UAA{h}, opts...))
}

type uAAHandler struct {
	UAAHandler
}

func (h *uAAHandler) GetAll(ctx context.Context, in *google_protobuf.Empty, out *GetAllResp) error {
	return h.UAAHandler.GetAll(ctx, in, out)
}

func (h *uAAHandler) GetByUsername(ctx context.Context, in *GetByUsernameReq, out *Account) error {
	return h.UAAHandler.GetByUsername(ctx, in, out)
}

func (h *uAAHandler) DeleteByUsername(ctx context.Context, in *DeleteByUsernameReq, out *google_protobuf.Empty) error {
	return h.UAAHandler.DeleteByUsername(ctx, in, out)
}

func (h *uAAHandler) Register(ctx context.Context, in *RegisterReq, out *Account) error {
	return h.UAAHandler.Register(ctx, in, out)
}

func (h *uAAHandler) VerifyPassword(ctx context.Context, in *VerifyPasswordReq, out *Account) error {
	return h.UAAHandler.VerifyPassword(ctx, in, out)
}

func (h *uAAHandler) ChangePassword(ctx context.Context, in *ChangePasswordReq, out *google_protobuf.Empty) error {
	return h.UAAHandler.ChangePassword(ctx, in, out)
}
