// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/content.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tag struct {
	Tag                  string               `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Hot                  uint64               `protobuf:"varint,2,opt,name=hot,proto3" json:"hot,omitempty"`
	FirstShow            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=firstShow,proto3" json:"firstShow,omitempty"`
	LastUse              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=lastUse,proto3" json:"lastUse,omitempty"`
	LastUseBy            string               `protobuf:"bytes,5,opt,name=lastUseBy,proto3" json:"lastUseBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{0}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Tag) GetHot() uint64 {
	if m != nil {
		return m.Hot
	}
	return 0
}

func (m *Tag) GetFirstShow() *timestamp.Timestamp {
	if m != nil {
		return m.FirstShow
	}
	return nil
}

func (m *Tag) GetLastUse() *timestamp.Timestamp {
	if m != nil {
		return m.LastUse
	}
	return nil
}

func (m *Tag) GetLastUseBy() string {
	if m != nil {
		return m.LastUseBy
	}
	return ""
}

type Info struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                   string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type                 uint32               `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Content              string               `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	CoverList            []string             `protobuf:"bytes,6,rep,name=coverList,proto3" json:"coverList,omitempty"`
	CoverVideo           string               `protobuf:"bytes,7,opt,name=coverVideo,proto3" json:"coverVideo,omitempty"`
	PublishTime          *timestamp.Timestamp `protobuf:"bytes,8,opt,name=publishTime,proto3" json:"publishTime,omitempty"`
	LastReviewTime       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=lastReviewTime,proto3" json:"lastReviewTime,omitempty"`
	Valid                bool                 `protobuf:"varint,10,opt,name=valid,proto3" json:"valid,omitempty"`
	WatchCount           int64                `protobuf:"varint,11,opt,name=watchCount,proto3" json:"watchCount,omitempty"`
	Tags                 []string             `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	Likes                int64                `protobuf:"varint,13,opt,name=likes,proto3" json:"likes,omitempty"`
	IsLike               bool                 `protobuf:"varint,14,opt,name=isLike,proto3" json:"isLike,omitempty"`
	LikeList             []string             `protobuf:"bytes,15,rep,name=likeList,proto3" json:"likeList,omitempty"`
	Unlike               int64                `protobuf:"varint,16,opt,name=unlike,proto3" json:"unlike,omitempty"`
	IsUnlike             bool                 `protobuf:"varint,17,opt,name=isUnlike,proto3" json:"isUnlike,omitempty"`
	UnlikeList           []string             `protobuf:"bytes,18,rep,name=unlikeList,proto3" json:"unlikeList,omitempty"`
	Favorites            int64                `protobuf:"varint,19,opt,name=favorites,proto3" json:"favorites,omitempty"`
	IsFavorite           bool                 `protobuf:"varint,20,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	FavoriteList         []string             `protobuf:"bytes,21,rep,name=favoriteList,proto3" json:"favoriteList,omitempty"`
	LastModifyTime       *timestamp.Timestamp `protobuf:"bytes,22,opt,name=lastModifyTime,proto3" json:"lastModifyTime,omitempty"`
	CanReview            bool                 `protobuf:"varint,23,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{1}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Info) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Info) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Info) GetCoverList() []string {
	if m != nil {
		return m.CoverList
	}
	return nil
}

func (m *Info) GetCoverVideo() string {
	if m != nil {
		return m.CoverVideo
	}
	return ""
}

func (m *Info) GetPublishTime() *timestamp.Timestamp {
	if m != nil {
		return m.PublishTime
	}
	return nil
}

func (m *Info) GetLastReviewTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastReviewTime
	}
	return nil
}

func (m *Info) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Info) GetWatchCount() int64 {
	if m != nil {
		return m.WatchCount
	}
	return 0
}

func (m *Info) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Info) GetLikes() int64 {
	if m != nil {
		return m.Likes
	}
	return 0
}

func (m *Info) GetIsLike() bool {
	if m != nil {
		return m.IsLike
	}
	return false
}

func (m *Info) GetLikeList() []string {
	if m != nil {
		return m.LikeList
	}
	return nil
}

func (m *Info) GetUnlike() int64 {
	if m != nil {
		return m.Unlike
	}
	return 0
}

func (m *Info) GetIsUnlike() bool {
	if m != nil {
		return m.IsUnlike
	}
	return false
}

func (m *Info) GetUnlikeList() []string {
	if m != nil {
		return m.UnlikeList
	}
	return nil
}

func (m *Info) GetFavorites() int64 {
	if m != nil {
		return m.Favorites
	}
	return 0
}

func (m *Info) GetIsFavorite() bool {
	if m != nil {
		return m.IsFavorite
	}
	return false
}

func (m *Info) GetFavoriteList() []string {
	if m != nil {
		return m.FavoriteList
	}
	return nil
}

func (m *Info) GetLastModifyTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastModifyTime
	}
	return nil
}

func (m *Info) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type GetTagReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Uid                  string   `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagReq) Reset()         { *m = GetTagReq{} }
func (m *GetTagReq) String() string { return proto.CompactTextString(m) }
func (*GetTagReq) ProtoMessage()    {}
func (*GetTagReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{2}
}

func (m *GetTagReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagReq.Unmarshal(m, b)
}
func (m *GetTagReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagReq.Marshal(b, m, deterministic)
}
func (m *GetTagReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagReq.Merge(m, src)
}
func (m *GetTagReq) XXX_Size() int {
	return xxx_messageInfo_GetTagReq.Size(m)
}
func (m *GetTagReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagReq proto.InternalMessageInfo

func (m *GetTagReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTagReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetTagReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type UidPageReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Uid                  string   `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidPageReq) Reset()         { *m = UidPageReq{} }
func (m *UidPageReq) String() string { return proto.CompactTextString(m) }
func (*UidPageReq) ProtoMessage()    {}
func (*UidPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{3}
}

func (m *UidPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidPageReq.Unmarshal(m, b)
}
func (m *UidPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidPageReq.Marshal(b, m, deterministic)
}
func (m *UidPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidPageReq.Merge(m, src)
}
func (m *UidPageReq) XXX_Size() int {
	return xxx_messageInfo_UidPageReq.Size(m)
}
func (m *UidPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UidPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_UidPageReq proto.InternalMessageInfo

func (m *UidPageReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UidPageReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UidPageReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetTagsResp struct {
	Tags                 []*Tag   `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsResp) Reset()         { *m = GetTagsResp{} }
func (m *GetTagsResp) String() string { return proto.CompactTextString(m) }
func (*GetTagsResp) ProtoMessage()    {}
func (*GetTagsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{4}
}

func (m *GetTagsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsResp.Unmarshal(m, b)
}
func (m *GetTagsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsResp.Marshal(b, m, deterministic)
}
func (m *GetTagsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsResp.Merge(m, src)
}
func (m *GetTagsResp) XXX_Size() int {
	return xxx_messageInfo_GetTagsResp.Size(m)
}
func (m *GetTagsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsResp proto.InternalMessageInfo

func (m *GetTagsResp) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type PublishInfoReq struct {
	Uid                  string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string            `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Tags                 []string          `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	ImgList              map[string]string `protobuf:"bytes,5,rep,name=imgList,proto3" json:"imgList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VideoList            map[string]string `protobuf:"bytes,6,rep,name=videoList,proto3" json:"videoList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	External             bool              `protobuf:"varint,7,opt,name=external,proto3" json:"external,omitempty"`
	CanReview            bool              `protobuf:"varint,8,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishInfoReq) Reset()         { *m = PublishInfoReq{} }
func (m *PublishInfoReq) String() string { return proto.CompactTextString(m) }
func (*PublishInfoReq) ProtoMessage()    {}
func (*PublishInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{5}
}

func (m *PublishInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInfoReq.Unmarshal(m, b)
}
func (m *PublishInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInfoReq.Marshal(b, m, deterministic)
}
func (m *PublishInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInfoReq.Merge(m, src)
}
func (m *PublishInfoReq) XXX_Size() int {
	return xxx_messageInfo_PublishInfoReq.Size(m)
}
func (m *PublishInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInfoReq proto.InternalMessageInfo

func (m *PublishInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PublishInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PublishInfoReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *PublishInfoReq) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishInfoReq) GetImgList() map[string]string {
	if m != nil {
		return m.ImgList
	}
	return nil
}

func (m *PublishInfoReq) GetVideoList() map[string]string {
	if m != nil {
		return m.VideoList
	}
	return nil
}

func (m *PublishInfoReq) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *PublishInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type EditInfoReq struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  string            `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string            `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Tags                 []string          `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	ImgList              map[string]string `protobuf:"bytes,6,rep,name=imgList,proto3" json:"imgList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VideoList            map[string]string `protobuf:"bytes,7,rep,name=videoList,proto3" json:"videoList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	External             bool              `protobuf:"varint,8,opt,name=external,proto3" json:"external,omitempty"`
	CanReview            bool              `protobuf:"varint,9,opt,name=canReview,proto3" json:"canReview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EditInfoReq) Reset()         { *m = EditInfoReq{} }
func (m *EditInfoReq) String() string { return proto.CompactTextString(m) }
func (*EditInfoReq) ProtoMessage()    {}
func (*EditInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{6}
}

func (m *EditInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditInfoReq.Unmarshal(m, b)
}
func (m *EditInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditInfoReq.Marshal(b, m, deterministic)
}
func (m *EditInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditInfoReq.Merge(m, src)
}
func (m *EditInfoReq) XXX_Size() int {
	return xxx_messageInfo_EditInfoReq.Size(m)
}
func (m *EditInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditInfoReq proto.InternalMessageInfo

func (m *EditInfoReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EditInfoReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *EditInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditInfoReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *EditInfoReq) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EditInfoReq) GetImgList() map[string]string {
	if m != nil {
		return m.ImgList
	}
	return nil
}

func (m *EditInfoReq) GetVideoList() map[string]string {
	if m != nil {
		return m.VideoList
	}
	return nil
}

func (m *EditInfoReq) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *EditInfoReq) GetCanReview() bool {
	if m != nil {
		return m.CanReview
	}
	return false
}

type GetInfosReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Uid                  string   `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfosReq) Reset()         { *m = GetInfosReq{} }
func (m *GetInfosReq) String() string { return proto.CompactTextString(m) }
func (*GetInfosReq) ProtoMessage()    {}
func (*GetInfosReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{7}
}

func (m *GetInfosReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfosReq.Unmarshal(m, b)
}
func (m *GetInfosReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfosReq.Marshal(b, m, deterministic)
}
func (m *GetInfosReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfosReq.Merge(m, src)
}
func (m *GetInfosReq) XXX_Size() int {
	return xxx_messageInfo_GetInfosReq.Size(m)
}
func (m *GetInfosReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfosReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfosReq proto.InternalMessageInfo

func (m *GetInfosReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetInfosReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetInfosReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetInfosResp struct {
	Infos                []*Info  `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfosResp) Reset()         { *m = GetInfosResp{} }
func (m *GetInfosResp) String() string { return proto.CompactTextString(m) }
func (*GetInfosResp) ProtoMessage()    {}
func (*GetInfosResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{8}
}

func (m *GetInfosResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfosResp.Unmarshal(m, b)
}
func (m *GetInfosResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfosResp.Marshal(b, m, deterministic)
}
func (m *GetInfosResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfosResp.Merge(m, src)
}
func (m *GetInfosResp) XXX_Size() int {
	return xxx_messageInfo_GetInfosResp.Size(m)
}
func (m *GetInfosResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfosResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfosResp proto.InternalMessageInfo

func (m *GetInfosResp) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

type InfoIdReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIdReq) Reset()         { *m = InfoIdReq{} }
func (m *InfoIdReq) String() string { return proto.CompactTextString(m) }
func (*InfoIdReq) ProtoMessage()    {}
func (*InfoIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{9}
}

func (m *InfoIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIdReq.Unmarshal(m, b)
}
func (m *InfoIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIdReq.Marshal(b, m, deterministic)
}
func (m *InfoIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIdReq.Merge(m, src)
}
func (m *InfoIdReq) XXX_Size() int {
	return xxx_messageInfo_InfoIdReq.Size(m)
}
func (m *InfoIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIdReq proto.InternalMessageInfo

func (m *InfoIdReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InfoIdPageReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Uid                  string   `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIdPageReq) Reset()         { *m = InfoIdPageReq{} }
func (m *InfoIdPageReq) String() string { return proto.CompactTextString(m) }
func (*InfoIdPageReq) ProtoMessage()    {}
func (*InfoIdPageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{10}
}

func (m *InfoIdPageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIdPageReq.Unmarshal(m, b)
}
func (m *InfoIdPageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIdPageReq.Marshal(b, m, deterministic)
}
func (m *InfoIdPageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIdPageReq.Merge(m, src)
}
func (m *InfoIdPageReq) XXX_Size() int {
	return xxx_messageInfo_InfoIdPageReq.Size(m)
}
func (m *InfoIdPageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIdPageReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIdPageReq proto.InternalMessageInfo

func (m *InfoIdPageReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InfoIdPageReq) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InfoIdPageReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type UserIdsResp struct {
	Uids                 []string `protobuf:"bytes,1,rep,name=uids,proto3" json:"uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdsResp) Reset()         { *m = UserIdsResp{} }
func (m *UserIdsResp) String() string { return proto.CompactTextString(m) }
func (*UserIdsResp) ProtoMessage()    {}
func (*UserIdsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{11}
}

func (m *UserIdsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdsResp.Unmarshal(m, b)
}
func (m *UserIdsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdsResp.Marshal(b, m, deterministic)
}
func (m *UserIdsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdsResp.Merge(m, src)
}
func (m *UserIdsResp) XXX_Size() int {
	return xxx_messageInfo_UserIdsResp.Size(m)
}
func (m *UserIdsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdsResp proto.InternalMessageInfo

func (m *UserIdsResp) GetUids() []string {
	if m != nil {
		return m.Uids
	}
	return nil
}

type InfoIdsResp struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoIdsResp) Reset()         { *m = InfoIdsResp{} }
func (m *InfoIdsResp) String() string { return proto.CompactTextString(m) }
func (*InfoIdsResp) ProtoMessage()    {}
func (*InfoIdsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_048f54ad8861f783, []int{12}
}

func (m *InfoIdsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoIdsResp.Unmarshal(m, b)
}
func (m *InfoIdsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoIdsResp.Marshal(b, m, deterministic)
}
func (m *InfoIdsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoIdsResp.Merge(m, src)
}
func (m *InfoIdsResp) XXX_Size() int {
	return xxx_messageInfo_InfoIdsResp.Size(m)
}
func (m *InfoIdsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoIdsResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoIdsResp proto.InternalMessageInfo

func (m *InfoIdsResp) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "com.teddy.srv.content.Tag")
	proto.RegisterType((*Info)(nil), "com.teddy.srv.content.Info")
	proto.RegisterType((*GetTagReq)(nil), "com.teddy.srv.content.GetTagReq")
	proto.RegisterType((*UidPageReq)(nil), "com.teddy.srv.content.UidPageReq")
	proto.RegisterType((*GetTagsResp)(nil), "com.teddy.srv.content.GetTagsResp")
	proto.RegisterType((*PublishInfoReq)(nil), "com.teddy.srv.content.PublishInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "com.teddy.srv.content.PublishInfoReq.ImgListEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.teddy.srv.content.PublishInfoReq.VideoListEntry")
	proto.RegisterType((*EditInfoReq)(nil), "com.teddy.srv.content.EditInfoReq")
	proto.RegisterMapType((map[string]string)(nil), "com.teddy.srv.content.EditInfoReq.ImgListEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.teddy.srv.content.EditInfoReq.VideoListEntry")
	proto.RegisterType((*GetInfosReq)(nil), "com.teddy.srv.content.GetInfosReq")
	proto.RegisterType((*GetInfosResp)(nil), "com.teddy.srv.content.GetInfosResp")
	proto.RegisterType((*InfoIdReq)(nil), "com.teddy.srv.content.InfoIdReq")
	proto.RegisterType((*InfoIdPageReq)(nil), "com.teddy.srv.content.InfoIdPageReq")
	proto.RegisterType((*UserIdsResp)(nil), "com.teddy.srv.content.UserIdsResp")
	proto.RegisterType((*InfoIdsResp)(nil), "com.teddy.srv.content.InfoIdsResp")
}

func init() { proto.RegisterFile("proto/content.proto", fileDescriptor_048f54ad8861f783) }

var fileDescriptor_048f54ad8861f783 = []byte{
	// 1083 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcd, 0x72, 0x1b, 0x45,
	0x10, 0xf6, 0x6a, 0x25, 0x4b, 0xdb, 0xfa, 0x89, 0x99, 0x24, 0x66, 0x4b, 0xa1, 0x40, 0x59, 0xa0,
	0x4a, 0xa7, 0x55, 0xc5, 0xc9, 0x21, 0x15, 0xc2, 0x01, 0x07, 0xd9, 0x16, 0x65, 0x20, 0x2c, 0x56,
	0x52, 0xb8, 0x28, 0xaa, 0xd6, 0xda, 0xd1, 0x6a, 0xca, 0xd2, 0xae, 0xd0, 0x8c, 0x64, 0xc4, 0x8b,
	0x71, 0xe1, 0xc6, 0x4b, 0xf0, 0x08, 0x3c, 0x06, 0x35, 0x3d, 0xfb, 0x27, 0xdb, 0xfa, 0xa1, 0xa4,
	0x03, 0x17, 0x7b, 0x7a, 0xb6, 0xfb, 0x9b, 0x6f, 0xfa, 0xeb, 0x6e, 0x0d, 0x3c, 0x1c, 0x4f, 0x42,
	0x11, 0xb6, 0x7a, 0x61, 0x20, 0x68, 0x20, 0x6c, 0xb4, 0xc8, 0xe3, 0x5e, 0x38, 0xb2, 0x05, 0xf5,
	0xbc, 0xb9, 0xcd, 0x27, 0x33, 0x3b, 0xfa, 0x58, 0x7f, 0xee, 0x33, 0x31, 0x98, 0x5e, 0xd9, 0xbd,
	0x70, 0xd4, 0xf2, 0xc3, 0xa1, 0x1b, 0xf8, 0x2d, 0xf4, 0xbf, 0x9a, 0xf6, 0x5b, 0x63, 0x31, 0x1f,
	0x53, 0xde, 0xa2, 0xa3, 0xb1, 0x98, 0xab, 0xbf, 0x0a, 0xab, 0xfe, 0xc5, 0xfa, 0x20, 0xc1, 0x46,
	0x94, 0x0b, 0x77, 0x34, 0x4e, 0x57, 0x2a, 0xd8, 0xfa, 0x43, 0x03, 0xfd, 0xc2, 0xf5, 0xc9, 0x01,
	0xe8, 0xc2, 0xf5, 0x4d, 0xad, 0xa1, 0x35, 0x0d, 0x47, 0x2e, 0xe5, 0xce, 0x20, 0x14, 0x66, 0xae,
	0xa1, 0x35, 0xf3, 0x8e, 0x5c, 0x92, 0x97, 0x60, 0xf4, 0xd9, 0x84, 0x8b, 0x1f, 0x07, 0xe1, 0x8d,
	0xa9, 0x37, 0xb4, 0x66, 0xf9, 0xa8, 0x6e, 0xfb, 0x61, 0xe8, 0x0f, 0xa9, 0x1d, 0x9f, 0x68, 0x5f,
	0xc4, 0x07, 0x38, 0xa9, 0x33, 0x79, 0x01, 0xc5, 0xa1, 0xcb, 0x45, 0x97, 0x53, 0x33, 0xbf, 0x36,
	0x2e, 0x76, 0x25, 0x1f, 0x81, 0x11, 0x2d, 0x8f, 0xe7, 0x66, 0x01, 0x99, 0xa5, 0x1b, 0xd6, 0xdf,
	0x05, 0xc8, 0x77, 0x82, 0x7e, 0x28, 0x89, 0x4e, 0x99, 0x17, 0x53, 0x9f, 0x32, 0x8f, 0xd4, 0x20,
	0xc7, 0x3c, 0x64, 0x6e, 0x38, 0x39, 0xe6, 0x91, 0x47, 0x50, 0x10, 0x4c, 0x0c, 0x29, 0x92, 0x36,
	0x1c, 0x65, 0x10, 0x02, 0x79, 0x99, 0x1d, 0x64, 0x54, 0x75, 0x70, 0x4d, 0x4c, 0x28, 0x46, 0x5a,
	0x44, 0x07, 0xc6, 0xa6, 0x24, 0xd3, 0x0b, 0x67, 0x74, 0x72, 0xce, 0xb8, 0x30, 0xf7, 0x1b, 0xba,
	0x24, 0x93, 0x6c, 0x90, 0x8f, 0x01, 0xd0, 0x78, 0xc7, 0x3c, 0x1a, 0x9a, 0x45, 0x0c, 0xcd, 0xec,
	0x90, 0xd7, 0x50, 0x1e, 0x4f, 0xaf, 0x86, 0x8c, 0x0f, 0xe4, 0x3d, 0xcd, 0xd2, 0xda, 0x24, 0x64,
	0xdd, 0xc9, 0x31, 0xd4, 0xe4, 0xbd, 0x1d, 0x3a, 0x63, 0xf4, 0x06, 0x01, 0x8c, 0xb5, 0x00, 0xb7,
	0x22, 0x64, 0x0e, 0x66, 0xee, 0x90, 0x79, 0x26, 0x34, 0xb4, 0x66, 0xc9, 0x51, 0x86, 0xe4, 0x7d,
	0xe3, 0x8a, 0xde, 0xe0, 0x4d, 0x38, 0x0d, 0x84, 0x59, 0x6e, 0x68, 0x4d, 0xdd, 0xc9, 0xec, 0x60,
	0x8e, 0x5c, 0x9f, 0x9b, 0x15, 0xbc, 0x30, 0xae, 0x25, 0xd2, 0x90, 0x5d, 0x53, 0x6e, 0x56, 0xd1,
	0x5d, 0x19, 0xe4, 0x10, 0xf6, 0x19, 0x3f, 0x67, 0xd7, 0xd4, 0xac, 0xe1, 0x01, 0x91, 0x45, 0xea,
	0x50, 0x92, 0x0e, 0x98, 0xb6, 0x07, 0x88, 0x92, 0xd8, 0x32, 0x66, 0x1a, 0x48, 0xcb, 0x3c, 0x40,
	0xa8, 0xc8, 0x92, 0x31, 0x8c, 0x77, 0xd5, 0x97, 0x0f, 0x10, 0x2d, 0xb1, 0x25, 0x63, 0xe5, 0x85,
	0x88, 0x04, 0x11, 0x33, 0x3b, 0x52, 0xa7, 0xbe, 0x3b, 0x0b, 0x27, 0x4c, 0x50, 0x6e, 0x3e, 0x44,
	0xd8, 0x74, 0x43, 0x46, 0x33, 0x7e, 0x12, 0x99, 0xe6, 0x23, 0xc4, 0xce, 0xec, 0x10, 0x0b, 0x2a,
	0xb1, 0x33, 0xe2, 0x3f, 0x46, 0xfc, 0x85, 0xbd, 0x58, 0x8d, 0x6f, 0x43, 0x8f, 0xf5, 0xe7, 0xa8,
	0xc6, 0xe1, 0x66, 0x6a, 0xa4, 0x11, 0x58, 0x4d, 0x6e, 0xa0, 0xe4, 0x31, 0x3f, 0x44, 0x1a, 0xe9,
	0x86, 0xd5, 0x06, 0xe3, 0x94, 0x8a, 0x0b, 0xd7, 0x77, 0xe8, 0xaf, 0x52, 0x82, 0xb1, 0xeb, 0x53,
	0xac, 0xef, 0xaa, 0x83, 0x6b, 0xb9, 0xc7, 0xd9, 0xef, 0x14, 0x4b, 0xbc, 0xea, 0xe0, 0x3a, 0x6e,
	0x03, 0x3d, 0x69, 0x03, 0xeb, 0x04, 0xa0, 0xcb, 0xbc, 0xb7, 0xae, 0x4f, 0xb7, 0xc3, 0xf9, 0x12,
	0xca, 0x8a, 0x0e, 0x77, 0x28, 0x1f, 0x13, 0x3b, 0xaa, 0x09, 0xad, 0xa1, 0xe3, 0xad, 0xef, 0x1d,
	0x65, 0xb6, 0x64, 0x8f, 0x7e, 0xd6, 0x9f, 0x3a, 0xd4, 0xde, 0xaa, 0x6a, 0x96, 0xfd, 0x2a, 0xb9,
	0xdc, 0x6d, 0xd9, 0xa4, 0x45, 0x73, 0xd9, 0x16, 0xcd, 0xb4, 0xa3, 0xbe, 0xd8, 0x8e, 0x71, 0x61,
	0xe6, 0x33, 0x85, 0x79, 0x0e, 0x45, 0x36, 0xf2, 0x51, 0xb7, 0x02, 0x72, 0x3b, 0x5a, 0xc2, 0x6d,
	0x91, 0x8d, 0xdd, 0x51, 0x41, 0xed, 0x40, 0x4c, 0xe6, 0x4e, 0x0c, 0x41, 0x1c, 0x30, 0x66, 0xb2,
	0x77, 0x93, 0x86, 0x2f, 0x1f, 0xbd, 0xd8, 0x0c, 0xef, 0x5d, 0x1c, 0xa6, 0x10, 0x53, 0x18, 0x59,
	0xd8, 0xf4, 0x37, 0x41, 0x27, 0x81, 0x3b, 0xc4, 0x21, 0x51, 0x72, 0x12, 0x7b, 0xb1, 0x24, 0x4a,
	0xb7, 0x4a, 0xa2, 0xfe, 0x0a, 0x2a, 0x59, 0x9a, 0x32, 0x83, 0xd7, 0x74, 0x1e, 0x67, 0xf0, 0x9a,
	0xce, 0xa3, 0x06, 0x9f, 0x26, 0x19, 0x44, 0xe3, 0x55, 0xee, 0xa5, 0x56, 0x7f, 0x0d, 0xb5, 0x45,
	0x4a, 0xff, 0x25, 0xda, 0xfa, 0x4b, 0x87, 0x72, 0xdb, 0x63, 0x22, 0xd6, 0x4e, 0x0d, 0x57, 0x2d,
	0x19, 0xae, 0x91, 0x96, 0xb9, 0x7b, 0xb4, 0xd4, 0x97, 0x68, 0x99, 0xbf, 0x5f, 0xcb, 0x42, 0x46,
	0xcb, 0x4e, 0xaa, 0xa5, 0xca, 0x7d, 0x6b, 0x49, 0xee, 0x33, 0xd4, 0x96, 0x08, 0xf9, 0x7d, 0x56,
	0xc8, 0x22, 0x82, 0x3d, 0xdb, 0x00, 0x6c, 0x33, 0x15, 0x4b, 0xab, 0x54, 0x34, 0xfe, 0x3f, 0x2a,
	0x9e, 0x62, 0x0f, 0xcb, 0xbb, 0xf1, 0xed, 0x86, 0xc1, 0x57, 0x50, 0x49, 0x81, 0xf8, 0x98, 0x3c,
	0x83, 0x02, 0x93, 0x46, 0x34, 0x0e, 0x9e, 0x2c, 0xc9, 0x2c, 0x66, 0x55, 0x79, 0x5a, 0x4f, 0xc0,
	0x90, 0x66, 0xc7, 0xbb, 0xa7, 0x9c, 0xac, 0x36, 0x54, 0xd5, 0xc7, 0x78, 0x6e, 0xdd, 0xae, 0xb7,
	0xcd, 0x68, 0x3e, 0x85, 0x72, 0x97, 0xd3, 0x49, 0xc7, 0x53, 0x2c, 0x09, 0xe4, 0xa7, 0xcc, 0x53,
	0x24, 0x0d, 0x07, 0xd7, 0xd6, 0x27, 0x50, 0x56, 0x27, 0x29, 0x97, 0x03, 0xd0, 0x53, 0x0f, 0xb9,
	0x3c, 0xfa, 0xc7, 0x80, 0xe2, 0x9b, 0xa8, 0x46, 0x7f, 0x80, 0x62, 0x34, 0x03, 0x49, 0x63, 0xc9,
	0x15, 0x93, 0x91, 0x5d, 0xb7, 0x56, 0x7a, 0xe0, 0x71, 0xd6, 0x1e, 0xf9, 0x0e, 0xca, 0x99, 0xc1,
	0x41, 0x3e, 0xdf, 0x68, 0xb8, 0xd4, 0x0f, 0xef, 0xfc, 0xca, 0xb4, 0xe5, 0x5b, 0xd0, 0xda, 0x23,
	0x67, 0x50, 0x8a, 0xeb, 0x97, 0x58, 0xeb, 0x0b, 0x7c, 0x05, 0x52, 0x17, 0x4a, 0xb1, 0xc6, 0x64,
	0xc5, 0x5d, 0xe2, 0x6a, 0xaa, 0x7f, 0xba, 0xd6, 0x07, 0x2f, 0x7c, 0x06, 0xf0, 0x35, 0x1d, 0x52,
	0x41, 0x91, 0x62, 0x63, 0x45, 0xa5, 0x60, 0x69, 0xac, 0x20, 0x78, 0x0a, 0xc6, 0x7b, 0xf9, 0x48,
	0xd9, 0x1a, 0xe8, 0x04, 0x4a, 0xf2, 0x95, 0xb2, 0x35, 0xce, 0x19, 0x40, 0x37, 0xd8, 0x09, 0xd2,
	0x7b, 0xec, 0x2f, 0x59, 0xbb, 0xe7, 0xf8, 0xae, 0x7a, 0xba, 0x04, 0x2b, 0xfd, 0x65, 0x5f, 0x5a,
	0x6e, 0x99, 0xea, 0xb6, 0xf6, 0xc8, 0x4f, 0x50, 0x8b, 0x80, 0xd5, 0x4b, 0x6a, 0x87, 0xd0, 0x97,
	0xc9, 0x4c, 0x90, 0x9c, 0x3d, 0xf2, 0xd9, 0xca, 0xa8, 0x75, 0xd8, 0x99, 0xbe, 0xb5, 0xf6, 0xc8,
	0xcf, 0x48, 0x5b, 0x46, 0x2a, 0xda, 0xbb, 0x45, 0xff, 0x06, 0x2a, 0xf1, 0xdb, 0x6f, 0x6b, 0xe5,
	0x2e, 0xe1, 0x41, 0x94, 0xe0, 0xe4, 0x39, 0xb9, 0xb3, 0x0c, 0xff, 0x02, 0x07, 0x51, 0x16, 0x62,
	0xec, 0x9d, 0xe6, 0xe1, 0xb8, 0x78, 0x59, 0x50, 0xf7, 0xd9, 0xc7, 0x7f, 0xcf, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x4d, 0x53, 0xb2, 0xc7, 0xb6, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentClient is the client API for Content service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentClient interface {
	GetTags(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*GetTagsResp, error)
	PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*empty.Empty, error)
	EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*GetInfosResp, error)
	DeleteInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error)
	WatchInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error)
	LikeInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error)
	UnLikeInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserLikes(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error)
	GetUserUnlikes(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error)
	GetInfoLiked(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error)
	GetInfoUnliked(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error)
	FavoriteInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserFavorite(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error)
	GetInfoFavorited(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error)
}

type contentClient struct {
	cc *grpc.ClientConn
}

func NewContentClient(cc *grpc.ClientConn) ContentClient {
	return &contentClient{cc}
}

func (c *contentClient) GetTags(ctx context.Context, in *GetTagReq, opts ...grpc.CallOption) (*GetTagsResp, error) {
	out := new(GetTagsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) PublishInfo(ctx context.Context, in *PublishInfoReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/PublishInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) EditInfo(ctx context.Context, in *EditInfoReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/EditInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfos(ctx context.Context, in *GetInfosReq, opts ...grpc.CallOption) (*GetInfosResp, error) {
	out := new(GetInfosResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) DeleteInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/DeleteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) WatchInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/WatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) LikeInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/LikeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) UnLikeInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/UnLikeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserLikes(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error) {
	out := new(InfoIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetUserLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserUnlikes(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error) {
	out := new(InfoIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetUserUnlikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoLiked(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error) {
	out := new(UserIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetInfoLiked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoUnliked(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error) {
	out := new(UserIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetInfoUnliked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) FavoriteInfo(ctx context.Context, in *InfoIdReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/FavoriteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetUserFavorite(ctx context.Context, in *UidPageReq, opts ...grpc.CallOption) (*InfoIdsResp, error) {
	out := new(InfoIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetUserFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) GetInfoFavorited(ctx context.Context, in *InfoIdPageReq, opts ...grpc.CallOption) (*UserIdsResp, error) {
	out := new(UserIdsResp)
	err := c.cc.Invoke(ctx, "/com.teddy.srv.content.Content/GetInfoFavorited", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServer is the server API for Content service.
type ContentServer interface {
	GetTags(context.Context, *GetTagReq) (*GetTagsResp, error)
	PublishInfo(context.Context, *PublishInfoReq) (*empty.Empty, error)
	EditInfo(context.Context, *EditInfoReq) (*empty.Empty, error)
	GetInfos(context.Context, *GetInfosReq) (*GetInfosResp, error)
	DeleteInfo(context.Context, *InfoIdReq) (*empty.Empty, error)
	WatchInfo(context.Context, *InfoIdReq) (*empty.Empty, error)
	LikeInfo(context.Context, *InfoIdReq) (*empty.Empty, error)
	UnLikeInfo(context.Context, *InfoIdReq) (*empty.Empty, error)
	GetUserLikes(context.Context, *UidPageReq) (*InfoIdsResp, error)
	GetUserUnlikes(context.Context, *UidPageReq) (*InfoIdsResp, error)
	GetInfoLiked(context.Context, *InfoIdPageReq) (*UserIdsResp, error)
	GetInfoUnliked(context.Context, *InfoIdPageReq) (*UserIdsResp, error)
	FavoriteInfo(context.Context, *InfoIdReq) (*empty.Empty, error)
	GetUserFavorite(context.Context, *UidPageReq) (*InfoIdsResp, error)
	GetInfoFavorited(context.Context, *InfoIdPageReq) (*UserIdsResp, error)
}

func RegisterContentServer(s *grpc.Server, srv ContentServer) {
	s.RegisterService(&_Content_serviceDesc, srv)
}

func _Content_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetTags(ctx, req.(*GetTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_PublishInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).PublishInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/PublishInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).PublishInfo(ctx, req.(*PublishInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_EditInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).EditInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/EditInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).EditInfo(ctx, req.(*EditInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfosReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfos(ctx, req.(*GetInfosReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_DeleteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).DeleteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/DeleteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).DeleteInfo(ctx, req.(*InfoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_WatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).WatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/WatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).WatchInfo(ctx, req.(*InfoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_LikeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).LikeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/LikeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).LikeInfo(ctx, req.(*InfoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_UnLikeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).UnLikeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/UnLikeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).UnLikeInfo(ctx, req.(*InfoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetUserLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserLikes(ctx, req.(*UidPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserUnlikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserUnlikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetUserUnlikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserUnlikes(ctx, req.(*UidPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoLiked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoLiked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetInfoLiked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoLiked(ctx, req.(*InfoIdPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoUnliked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoUnliked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetInfoUnliked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoUnliked(ctx, req.(*InfoIdPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_FavoriteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).FavoriteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/FavoriteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).FavoriteInfo(ctx, req.(*InfoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetUserFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetUserFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetUserFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetUserFavorite(ctx, req.(*UidPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_GetInfoFavorited_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoIdPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).GetInfoFavorited(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.teddy.srv.content.Content/GetInfoFavorited",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).GetInfoFavorited(ctx, req.(*InfoIdPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Content_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.teddy.srv.content.Content",
	HandlerType: (*ContentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTags",
			Handler:    _Content_GetTags_Handler,
		},
		{
			MethodName: "PublishInfo",
			Handler:    _Content_PublishInfo_Handler,
		},
		{
			MethodName: "EditInfo",
			Handler:    _Content_EditInfo_Handler,
		},
		{
			MethodName: "GetInfos",
			Handler:    _Content_GetInfos_Handler,
		},
		{
			MethodName: "DeleteInfo",
			Handler:    _Content_DeleteInfo_Handler,
		},
		{
			MethodName: "WatchInfo",
			Handler:    _Content_WatchInfo_Handler,
		},
		{
			MethodName: "LikeInfo",
			Handler:    _Content_LikeInfo_Handler,
		},
		{
			MethodName: "UnLikeInfo",
			Handler:    _Content_UnLikeInfo_Handler,
		},
		{
			MethodName: "GetUserLikes",
			Handler:    _Content_GetUserLikes_Handler,
		},
		{
			MethodName: "GetUserUnlikes",
			Handler:    _Content_GetUserUnlikes_Handler,
		},
		{
			MethodName: "GetInfoLiked",
			Handler:    _Content_GetInfoLiked_Handler,
		},
		{
			MethodName: "GetInfoUnliked",
			Handler:    _Content_GetInfoUnliked_Handler,
		},
		{
			MethodName: "FavoriteInfo",
			Handler:    _Content_FavoriteInfo_Handler,
		},
		{
			MethodName: "GetUserFavorite",
			Handler:    _Content_GetUserFavorite_Handler,
		},
		{
			MethodName: "GetInfoFavorited",
			Handler:    _Content_GetInfoFavorited_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/content.proto",
}
